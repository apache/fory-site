"use strict";(self.webpackChunkfory_site=self.webpackChunkfory_site||[]).push([[5624],{25951:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=a(85893),s=a(11151);const t={id:"usage",title:"Apache Fory\u2122 \u4f7f\u7528",sidebar_position:1},i=void 0,o={id:"docs/start/usage",title:"Apache Fory\u2122 \u4f7f\u7528",description:"\u672c\u7ae0\u8282\u6f14\u793a\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u4f7f\u7528 Apache Fory\u2122 \u8fdb\u884c\u5e8f\u5217\u5316\u3002",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/version-0.13/docs/start/usage.md",sourceDirName:"docs/start",slug:"/docs/start/usage",permalink:"/zh-CN/docs/0.13/docs/start/usage",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/fory-site/tree/main/i18n/zh-CN/docusaurus-plugin-content-docs/version-0.13/docs/start/usage.md",tags:[],version:"0.13",sidebarPosition:1,frontMatter:{id:"usage",title:"Apache Fory\u2122 \u4f7f\u7528",sidebar_position:1},sidebar:"docsSidebar",previous:{title:"\u5b89\u88c5 Apache Fory\u2122",permalink:"/zh-CN/docs/0.13/docs/start/install"}},l={},c=[{value:"Java \u5e8f\u5217\u5316",id:"java-\u5e8f\u5217\u5316",level:2},{value:"Scala\u5e8f\u5217\u5316",id:"scala\u5e8f\u5217\u5316",level:2},{value:"\u8de8\u8bed\u8a00\u5e8f\u5217\u5316",id:"\u8de8\u8bed\u8a00\u5e8f\u5217\u5316",level:2},{value:"Java",id:"java",level:3},{value:"Python",id:"python",level:3},{value:"Golangs",id:"golangs",level:3},{value:"JavaScript",id:"javascript",level:3},{value:"Rust",id:"rust",level:3}];function u(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"\u672c\u7ae0\u8282\u6f14\u793a\u4e0d\u540c\u7f16\u7a0b\u8bed\u8a00\u4f7f\u7528 Apache Fory\u2122 \u8fdb\u884c\u5e8f\u5217\u5316\u3002"}),"\n",(0,r.jsx)(n.h2,{id:"java-\u5e8f\u5217\u5316",children:"Java \u5e8f\u5217\u5316"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"import java.util.List;\nimport java.util.Arrays;\nimport io.fory.*;\n\npublic class Example {\n  public static void main(String[] args) {\n    SomeClass object = new SomeClass();\n    // Note that Fory instances should be reused between\n    // multiple serializations of different objects.\n    Fory fory = Fory.builder().withLanguage(Language.JAVA)\n      // Allow to deserialize objects unknown types,\n      // more flexible but less secure.\n      // .requireClassRegistration(false)\n      .build();\n    // Registering types can reduce class name serialization overhead, but not mandatory.\n    // If secure mode enabled, all custom types must be registered.\n    fory.register(SomeClass.class);\n    byte[] bytes = fory.serialize(object);\n    System.out.println(fory.deserialize(bytes));\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"scala\u5e8f\u5217\u5316",children:"Scala\u5e8f\u5217\u5316"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:'import org.apache.fory.Fory\nimport org.apache.fory.serializer.scala.ScalaSerializers\n\ncase class Person(name: String, id: Long, github: String)\ncase class Point(x : Int, y : Int, z : Int)\n\nobject ScalaExample {\n  val fory: Fory = Fory.builder().withScalaOptimizationEnabled(true).build()\n  // Register optimized fory serializers for scala\n  ScalaSerializers.registerSerializers(fory)\n  fory.register(classOf[Person])\n  fory.register(classOf[Point])\n\n  def main(args: Array[String]): Unit = {\n    val p = Person("Shawn Yang", 1, "https://github.com/chaokunyang")\n    println(fory.deserialize(fory.serialize(p)))\n    println(fory.deserialize(fory.serialize(Point(1, 2, 3))))\n  }\n}\n\n## Kotlin\u5e8f\u5217\u5316\n```kotlin\nimport org.apache.fory.Fory\nimport org.apache.fory.ThreadSafeFory\nimport org.apache.fory.serializer.kotlin.KotlinSerializers\n\ndata class Person(val name: String, val id: Long, val github: String)\ndata class Point(val x : Int, val y : Int, val z : Int)\n\nfun main(args: Array<String>) {\n    // \u6ce8\u610f: \u4e0b\u9762\u7684Fory\u521d\u59cb\u5316\u4ee3\u7801\u5e94\u8be5\u53ea\u6267\u884c\u4e00\u6b21\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u6b21\u5e8f\u5217\u5316\u524d\u90fd\u8fd0\u884c\n    val fory: ThreadSafeFory = Fory.builder().requireClassRegistration(true).buildThreadSafeFory()\n    KotlinSerializers.registerSerializers(fory)\n    fory.register(Person::class.java)\n    fory.register(Point::class.java)\n\n    val p = Person("Shawn Yang", 1, "https://github.com/chaokunyang")\n    println(fory.deserialize(fory.serialize(p)))\n    println(fory.deserialize(fory.serialize(Point(1, 2, 3))))\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\u8de8\u8bed\u8a00\u5e8f\u5217\u5316",children:"\u8de8\u8bed\u8a00\u5e8f\u5217\u5316"}),"\n",(0,r.jsx)(n.h3,{id:"java",children:"Java"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import com.google.common.collect.ImmutableMap;\nimport io.fory.*;\n\nimport java.util.Map;\n\npublic class ReferenceExample {\n  public static class SomeClass {\n    SomeClass f1;\n    Map<String, String> f2;\n    Map<String, String> f3;\n  }\n\n  public static Object createObject() {\n    SomeClass obj = new SomeClass();\n    obj.f1 = obj;\n    obj.f2 = ImmutableMap.of("k1", "v1", "k2", "v2");\n    obj.f3 = obj.f2;\n    return obj;\n  }\n\n  // mvn exec:java -Dexec.mainClass="io.fory.examples.ReferenceExample"\n  public static void main(String[] args) {\n    Fory fory = Fory.builder().withLanguage(Language.XLANG)\n      .withRefTracking(true).build();\n    fory.register(SomeClass.class, "example.SomeClass");\n    byte[] bytes = fory.serialize(createObject());\n    // bytes can be data serialized by other languages.\n    System.out.println(fory.deserialize(bytes));\n    ;\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from typing import Dict\nimport pyfory\n\nclass SomeClass:\n    f1: "SomeClass"\n    f2: Dict[str, str]\n    f3: Dict[str, str]\n\nfory = pyfory.Fory(ref_tracking=True)\nfory.register_class(SomeClass, "example.SomeClass")\nobj = SomeClass()\nobj.f2 = {"k1": "v1", "k2": "v2"}\nobj.f1, obj.f3 = obj, obj.f2\ndata = fory.serialize(obj)\n# bytes can be data serialized by other languages.\nprint(fory.deserialize(data))\n'})}),"\n",(0,r.jsx)(n.h3,{id:"golangs",children:"Golangs"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n "fmt"\n forygo "github.com/apache/fory/go/fory"\n)\n\nfunc main() {\n type SomeClass struct {\n  F1 *SomeClass\n  F2 map[string]string\n  F3 map[string]string\n }\n fory := forygo.NewFory(true)\n if err := fory.RegisterTagType("example.SomeClass", SomeClass{}); err != nil {\n  panic(err)\n }\n value := &SomeClass{F2: map[string]string{"k1": "v1", "k2": "v2"}}\n value.F3 = value.F2\n value.F1 = value\n bytes, err := fory.Marshal(value)\n if err != nil {\n }\n var newValue interface{}\n // bytes can be data serialized by other languages.\n if err := fory.Unmarshal(bytes, &newValue); err != nil {\n  panic(err)\n }\n fmt.Println(newValue)\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import Fory, { Type } from "@apache-fory/fory";\n\n/**\n * @apache-fory/hps use v8\'s fast-calls-api that can be called directly by jit, ensure that the version of Node is 20 or above.\n * Experimental feature, installation success cannot be guaranteed at this moment\n * If you are unable to install the module, replace it with `const hps = null;`\n **/\nimport hps from "@apache-fory/hps";\n\n// Now we describe data structures using JSON, but in the future, we will use more ways.\nconst description = Type.object("example.foo", {\n  foo: Type.string(),\n});\nconst fory = new Fory({ hps });\nconst { serialize, deserialize } = fory.registerSerializer(description);\nconst input = serialize({ foo: "hello fory" });\nconst result = deserialize(input);\nconsole.log(result);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"rust",children:"Rust"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'use fory::{from_buffer, to_buffer, Fory};\n\n#[derive(Fory, Debug, PartialEq)]\n#[tag("example.foo")]\nstruct Animal {\n    name: String,\n    category: String,\n}\n\n#[derive(Fory, Debug, PartialEq)]\n#[tag("example.bar")]\nstruct Person {\n    name: String,\n    age: u32,\n    pets: Vec<Animal>,\n}\n\nfn main() {\n    let penson = Person {\n        name: "hello".to_string(),\n        age: 12,\n        pets: vec![\n            Animal {\n                name: "world1".to_string(),\n                category: "cat".to_string(),\n            },\n            Animal {\n                name: "world2".to_string(),\n                category: "dog".to_string(),\n            },\n        ],\n    };\n    let bin = to_buffer(&penson);\n    let obj: Person = from_buffer(&bin).expect("should success");\n    assert_eq!(obj, penson);\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},11151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>i});var r=a(67294);const s={},t=r.createContext(s);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);