"use strict";(self.webpackChunkfory_site=self.webpackChunkfory_site||[]).push([[9564],{42747:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>a});var s=r(85893),i=r(11151);const d={title:"Rust \u5e8f\u5217\u5316",sidebar_position:2,id:"rust_serialization",license:'Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the "License"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'},l=void 0,c={id:"docs/guide/rust_serialization",title:"Rust \u5e8f\u5217\u5316",description:"Apache Fory\u2122 Rust",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/docs/guide/rust_guide.md",sourceDirName:"docs/guide",slug:"/docs/guide/rust_serialization",permalink:"/zh-CN/docs/next/docs/guide/rust_serialization",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/fory-site/tree/main/i18n/zh-CN/docusaurus-plugin-content-docs/current/docs/guide/rust_guide.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Rust \u5e8f\u5217\u5316",sidebar_position:2,id:"rust_serialization",license:'Licensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the "License"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'},sidebar:"docsSidebar",previous:{title:"Python \u5e8f\u5217\u5316",permalink:"/zh-CN/docs/next/docs/guide/python_serialization"},next:{title:"Scala \u5e8f\u5217\u5316",permalink:"/zh-CN/docs/next/docs/guide/scala_serialization"}},t={},a=[{value:"Apache Fory\u2122 Rust",id:"apache-fory-rust",level:2},{value:"\ud83d\ude80 \u4e3a\u4ec0\u4e48\u9009\u62e9 Apache Fory\u2122 Rust\uff1f",id:"-\u4e3a\u4ec0\u4e48\u9009\u62e9-apache-fory-rust",level:2},{value:"\ud83d\udce6 Crates",id:"-crates",level:2},{value:"\ud83c\udfc3 \u5feb\u901f\u5f00\u59cb",id:"-\u5feb\u901f\u5f00\u59cb",level:2},{value:"\u57fa\u672c\u793a\u4f8b",id:"\u57fa\u672c\u793a\u4f8b",level:3},{value:"\ud83d\udcda \u6838\u5fc3\u7279\u6027",id:"-\u6838\u5fc3\u7279\u6027",level:2},{value:"1. \u5bf9\u8c61\u56fe\u5e8f\u5217\u5316",id:"1-\u5bf9\u8c61\u56fe\u5e8f\u5217\u5316",level:3},{value:"2. \u5171\u4eab\u548c\u5faa\u73af\u5f15\u7528",id:"2-\u5171\u4eab\u548c\u5faa\u73af\u5f15\u7528",level:3},{value:"\u4f7f\u7528 Rc/Arc \u7684\u5171\u4eab\u5f15\u7528",id:"\u4f7f\u7528-rcarc-\u7684\u5171\u4eab\u5f15\u7528",level:4},{value:"\u4f7f\u7528\u5f31\u6307\u9488\u7684\u5faa\u73af\u5f15\u7528",id:"\u4f7f\u7528\u5f31\u6307\u9488\u7684\u5faa\u73af\u5f15\u7528",level:4},{value:"3. Trait \u5bf9\u8c61\u5e8f\u5217\u5316",id:"3-trait-\u5bf9\u8c61\u5e8f\u5217\u5316",level:3},{value:"\u57fa\u672c Trait \u5bf9\u8c61\u5e8f\u5217\u5316",id:"\u57fa\u672c-trait-\u5bf9\u8c61\u5e8f\u5217\u5316",level:4},{value:"\u5e8f\u5217\u5316 <code>dyn Any</code> Trait \u5bf9\u8c61",id:"\u5e8f\u5217\u5316-dyn-any-trait-\u5bf9\u8c61",level:4},{value:"\u7ed3\u6784\u4f53\u4e2d\u57fa\u4e8e Rc/Arc \u7684 Trait \u5bf9\u8c61",id:"\u7ed3\u6784\u4f53\u4e2d\u57fa\u4e8e-rcarc-\u7684-trait-\u5bf9\u8c61",level:4},{value:"\u72ec\u7acb Trait \u5bf9\u8c61\u5e8f\u5217\u5316",id:"\u72ec\u7acb-trait-\u5bf9\u8c61\u5e8f\u5217\u5316",level:4},{value:"4. Schema \u6f14\u8fdb",id:"4-schema-\u6f14\u8fdb",level:3},{value:"5. \u679a\u4e3e\u652f\u6301",id:"5-\u679a\u4e3e\u652f\u6301",level:3},{value:"6. \u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u5668",id:"6-\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u5668",level:3},{value:"7. \u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316",id:"7-\u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316",level:3},{value:"8. \u7ebf\u7a0b\u5b89\u5168\u5e8f\u5217\u5316",id:"8-\u7ebf\u7a0b\u5b89\u5168\u5e8f\u5217\u5316",level:3},{value:"\ud83d\udd27 \u652f\u6301\u7684\u7c7b\u578b",id:"-\u652f\u6301\u7684\u7c7b\u578b",level:2},{value:"\u57fa\u672c\u7c7b\u578b",id:"\u57fa\u672c\u7c7b\u578b",level:3},{value:"\u96c6\u5408",id:"\u96c6\u5408",level:3},{value:"\u667a\u80fd\u6307\u9488",id:"\u667a\u80fd\u6307\u9488",level:3},{value:"\u65e5\u671f\u548c\u65f6\u95f4",id:"\u65e5\u671f\u548c\u65f6\u95f4",level:3},{value:"\u81ea\u5b9a\u4e49\u7c7b\u578b",id:"\u81ea\u5b9a\u4e49\u7c7b\u578b",level:3},{value:"\ud83c\udf0d \u8de8\u8bed\u8a00\u5e8f\u5217\u5316",id:"-\u8de8\u8bed\u8a00\u5e8f\u5217\u5316",level:2},{value:"\u26a1 \u6027\u80fd",id:"-\u6027\u80fd",level:2},{value:"\ud83d\udcd6 \u6587\u6863",id:"-\u6587\u6863",level:2},{value:"\ud83c\udfaf \u4f7f\u7528\u573a\u666f",id:"-\u4f7f\u7528\u573a\u666f",level:2},{value:"\u5bf9\u8c61\u5e8f\u5217\u5316",id:"\u5bf9\u8c61\u5e8f\u5217\u5316",level:3},{value:"\u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316",id:"\u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316",level:3},{value:"\ud83c\udfd7\ufe0f \u67b6\u6784",id:"\ufe0f-\u67b6\u6784",level:2},{value:"\ud83d\udd04 \u5e8f\u5217\u5316\u6a21\u5f0f",id:"-\u5e8f\u5217\u5316\u6a21\u5f0f",level:2},{value:"SchemaConsistent \u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09",id:"schemaconsistent-\u6a21\u5f0f\u9ed8\u8ba4",level:3},{value:"Compatible \u6a21\u5f0f",id:"compatible-\u6a21\u5f0f",level:3},{value:"\u2699\ufe0f \u914d\u7f6e",id:"\ufe0f-\u914d\u7f6e",level:2},{value:"\u6700\u5927\u52a8\u6001\u5bf9\u8c61\u5d4c\u5957\u6df1\u5ea6",id:"\u6700\u5927\u52a8\u6001\u5bf9\u8c61\u5d4c\u5957\u6df1\u5ea6",level:3},{value:"\ud83e\uddea \u6545\u969c\u6392\u9664",id:"-\u6545\u969c\u6392\u9664",level:2},{value:"\ud83d\udee0\ufe0f \u5f00\u53d1",id:"\ufe0f-\u5f00\u53d1",level:2},{value:"\u6784\u5efa",id:"\u6784\u5efa",level:3},{value:"\u6d4b\u8bd5",id:"\u6d4b\u8bd5",level:3},{value:"\u4ee3\u7801\u8d28\u91cf",id:"\u4ee3\u7801\u8d28\u91cf",level:3},{value:"\ud83d\uddfa\ufe0f \u8def\u7ebf\u56fe",id:"\ufe0f-\u8def\u7ebf\u56fe",level:2},{value:"\ud83d\udcc4 \u8bb8\u53ef\u8bc1",id:"-\u8bb8\u53ef\u8bc1",level:2},{value:"\ud83e\udd1d \u8d21\u732e",id:"-\u8d21\u732e",level:2},{value:"\ud83d\udcde \u652f\u6301",id:"-\u652f\u6301",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"apache-fory-rust",children:"Apache Fory\u2122 Rust"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Apache Fory\u2122"})," \u662f\u4e00\u4e2a\u6781\u901f\u7684\u591a\u8bed\u8a00\u5e8f\u5217\u5316\u6846\u67b6\uff0c\u7531 ",(0,s.jsx)(n.strong,{children:"JIT \u7f16\u8bd1"}),"\u548c",(0,s.jsx)(n.strong,{children:"\u96f6\u62f7\u8d1d"}),"\u6280\u672f\u9a71\u52a8\uff0c\u5728\u4fdd\u6301\u6613\u7528\u6027\u548c\u5b89\u5168\u6027\u7684\u540c\u65f6\u63d0\u4f9b",(0,s.jsx)(n.strong,{children:"\u8d85\u9ad8\u6027\u80fd"}),"\u3002"]}),"\n",(0,s.jsx)(n.p,{children:"Rust \u5b9e\u73b0\u63d0\u4f9b\u4e86\u591a\u529f\u80fd\u7684\u9ad8\u6027\u80fd\u5e8f\u5217\u5316\uff0c\u5177\u5907\u81ea\u52a8\u5185\u5b58\u7ba1\u7406\u548c\u7f16\u8bd1\u65f6\u7c7b\u578b\u5b89\u5168\u3002"}),"\n",(0,s.jsx)(n.h2,{id:"-\u4e3a\u4ec0\u4e48\u9009\u62e9-apache-fory-rust",children:"\ud83d\ude80 \u4e3a\u4ec0\u4e48\u9009\u62e9 Apache Fory\u2122 Rust\uff1f"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udd25 \u6781\u901f\u6027\u80fd"}),"\uff1a\u96f6\u62f7\u8d1d\u53cd\u5e8f\u5217\u5316\u548c\u4f18\u5316\u7684\u4e8c\u8fdb\u5236\u534f\u8bae"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\ud83c\udf0d \u8de8\u8bed\u8a00"}),"\uff1a\u4e0e Java\u3001Python\u3001C++\u3001Go\u3001JavaScript \u548c Rust \u4e4b\u95f4\u65e0\u7f1d\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u6570\u636e"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\ud83c\udfaf \u7c7b\u578b\u5b89\u5168"}),"\uff1a\u901a\u8fc7\u6d3e\u751f\u5b8f\u8fdb\u884c\u7f16\u8bd1\u65f6\u7c7b\u578b\u68c0\u67e5"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udd04 \u5faa\u73af\u5f15\u7528"}),"\uff1a\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"Rc"}),"/",(0,s.jsx)(n.code,{children:"Arc"})," \u548c\u5f31\u6307\u9488\u81ea\u52a8\u8ffd\u8e2a\u5171\u4eab\u548c\u5faa\u73af\u5f15\u7528"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\ud83e\uddec \u591a\u6001"}),"\uff1a\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"Box<dyn Trait>"}),"\u3001",(0,s.jsx)(n.code,{children:"Rc<dyn Trait>"})," \u548c ",(0,s.jsx)(n.code,{children:"Arc<dyn Trait>"})," \u5e8f\u5217\u5316 trait \u5bf9\u8c61"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udce6 Schema \u6f14\u8fdb"}),"\uff1a\u517c\u5bb9\u6a21\u5f0f\u652f\u6301\u72ec\u7acb\u7684 schema \u53d8\u66f4"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u26a1 \u4e24\u79cd\u6a21\u5f0f"}),"\uff1a\u5bf9\u8c61\u56fe\u5e8f\u5217\u5316\u548c\u96f6\u62f7\u8d1d\u7684\u57fa\u4e8e\u884c\u7684\u683c\u5f0f"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-crates",children:"\ud83d\udce6 Crates"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Crate"}),(0,s.jsx)(n.th,{children:"\u63cf\u8ff0"}),(0,s.jsx)(n.th,{children:"\u7248\u672c"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/apache/fory/blob/main/rust/fory",children:(0,s.jsx)(n.code,{children:"fory"})})}),(0,s.jsx)(n.td,{children:"\u5e26\u6d3e\u751f\u5b8f\u7684\u9ad8\u7ea7 API"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://crates.io/crates/fory",children:"https://crates.io/crates/fory"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/apache/fory/blob/main/rust/fory-core/",children:(0,s.jsx)(n.code,{children:"fory-core"})})}),(0,s.jsx)(n.td,{children:"\u6838\u5fc3\u5e8f\u5217\u5316\u5f15\u64ce"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://crates.io/crates/fory-core",children:"https://crates.io/crates/fory-core"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/apache/fory/blob/main/rust/fory-derive/",children:(0,s.jsx)(n.code,{children:"fory-derive"})})}),(0,s.jsx)(n.td,{children:"\u8fc7\u7a0b\u5b8f"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://crates.io/crates/fory-derive",children:"https://crates.io/crates/fory-derive"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"-\u5feb\u901f\u5f00\u59cb",children:"\ud83c\udfc3 \u5feb\u901f\u5f00\u59cb"}),"\n",(0,s.jsxs)(n.p,{children:["\u6dfb\u52a0 Apache Fory\u2122 \u5230\u4f60\u7684 ",(0,s.jsx)(n.code,{children:"Cargo.toml"}),"\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-toml",children:'[dependencies]\nfory = "0.13"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"\u57fa\u672c\u793a\u4f8b",children:"\u57fa\u672c\u793a\u4f8b"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use fory::{Fory, Error, Reader};\nuse fory::ForyObject;\n\n#[derive(ForyObject, Debug, PartialEq)]\nstruct User {\n    name: String,\n    age: i32,\n    email: String,\n}\n\nfn main() -> Result<(), Error> {\n    let mut fory = Fory::default();\n    fory.register::<User>(1)?;\n\n    let user = User {\n        name: "Alice".to_string(),\n        age: 30,\n        email: "alice@example.com".to_string(),\n    };\n\n    // \u5e8f\u5217\u5316\n    let bytes = fory.serialize(&user)?;\n    // \u53cd\u5e8f\u5217\u5316\n    let decoded: User = fory.deserialize(&bytes)?;\n    assert_eq!(user, decoded);\n\n    // \u5e8f\u5217\u5316\u5230\u6307\u5b9a\u7f13\u51b2\u533a\n    let mut buf: Vec<u8> = vec![];\n    fory.serialize_to(&user, &mut buf)?;\n    // \u4ece\u6307\u5b9a\u7f13\u51b2\u533a\u53cd\u5e8f\u5217\u5316\n    let mut reader = Reader::new(&buf);\n    let decoded: User = fory.deserialize_from(&mut reader)?;\n    assert_eq!(user, decoded);\n    Ok(())\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-\u6838\u5fc3\u7279\u6027",children:"\ud83d\udcda \u6838\u5fc3\u7279\u6027"}),"\n",(0,s.jsx)(n.h3,{id:"1-\u5bf9\u8c61\u56fe\u5e8f\u5217\u5316",children:"1. \u5bf9\u8c61\u56fe\u5e8f\u5217\u5316"}),"\n",(0,s.jsxs)(n.p,{children:["Apache Fory\u2122 \u63d0\u4f9b\u4e86\u590d\u6742\u5bf9\u8c61\u56fe\u7684\u81ea\u52a8\u5e8f\u5217\u5316\uff0c\u4fdd\u7559\u5bf9\u8c61\u4e4b\u95f4\u7684\u7ed3\u6784\u548c\u5173\u7cfb\u3002",(0,s.jsx)(n.code,{children:"#[derive(ForyObject)]"})," \u5b8f\u5728\u7f16\u8bd1\u65f6\u751f\u6210\u9ad8\u6548\u7684\u5e8f\u5217\u5316\u4ee3\u7801\uff0c\u6d88\u9664\u8fd0\u884c\u65f6\u5f00\u9500\u3002"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u6838\u5fc3\u80fd\u529b\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4efb\u610f\u6df1\u5ea6\u7684\u5d4c\u5957\u7ed3\u6784\u4f53\u5e8f\u5217\u5316"}),"\n",(0,s.jsx)(n.li,{children:"\u96c6\u5408\u7c7b\u578b\uff08Vec\u3001HashMap\u3001HashSet\u3001BTreeMap\uff09"}),"\n",(0,s.jsxs)(n.li,{children:["\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"Option<T>"})," \u7684\u53ef\u9009\u5b57\u6bb5"]}),"\n",(0,s.jsx)(n.li,{children:"\u81ea\u52a8\u5904\u7406\u57fa\u672c\u7c7b\u578b\u548c\u5b57\u7b26\u4e32"}),"\n",(0,s.jsx)(n.li,{children:"\u4f7f\u7528\u53d8\u957f\u6574\u6570\u7684\u9ad8\u6548\u4e8c\u8fdb\u5236\u7f16\u7801"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use fory::{Fory, Error};\nuse fory::ForyObject;\nuse std::collections::HashMap;\n\n#[derive(ForyObject, Debug, PartialEq)]\nstruct Person {\n    name: String,\n    age: i32,\n    address: Address,\n    hobbies: Vec<String>,\n    metadata: HashMap<String, String>,\n}\n\n#[derive(ForyObject, Debug, PartialEq)]\nstruct Address {\n    street: String,\n    city: String,\n    country: String,\n}\n\nlet mut fory = Fory::default();\nfory.register::<Address>(100);\nfory.register::<Person>(200);\n\nlet person = Person {\n    name: "John Doe".to_string(),\n    age: 30,\n    address: Address {\n        street: "123 Main St".to_string(),\n        city: "New York".to_string(),\n        country: "USA".to_string(),\n    },\n    hobbies: vec!["reading".to_string(), "coding".to_string()],\n    metadata: HashMap::from([\n        ("role".to_string(), "developer".to_string()),\n    ]),\n};\n\nlet bytes = fory.serialize(&person);\nlet decoded: Person = fory.deserialize(&bytes)?;\nassert_eq!(person, decoded);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-\u5171\u4eab\u548c\u5faa\u73af\u5f15\u7528",children:"2. \u5171\u4eab\u548c\u5faa\u73af\u5f15\u7528"}),"\n",(0,s.jsxs)(n.p,{children:["Apache Fory\u2122 \u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"Rc<T>"})," \u548c ",(0,s.jsx)(n.code,{children:"Arc<T>"})," \u81ea\u52a8\u8ffd\u8e2a\u548c\u4fdd\u7559\u5171\u4eab\u5bf9\u8c61\u7684\u5f15\u7528\u6807\u8bc6\u3002\u5f53\u540c\u4e00\u4e2a\u5bf9\u8c61\u88ab\u591a\u6b21\u5f15\u7528\u65f6\uff0cFory \u53ea\u5e8f\u5217\u5316\u4e00\u6b21\uff0c\u5e76\u4e3a\u540e\u7eed\u51fa\u73b0\u7684\u5f15\u7528\u4f7f\u7528\u5f15\u7528 ID\u3002\u8fd9\u786e\u4fdd\u4e86\uff1a"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u7a7a\u95f4\u6548\u7387"}),"\uff1a\u5e8f\u5217\u5316\u8f93\u51fa\u4e2d\u6ca1\u6709\u6570\u636e\u91cd\u590d"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u5f15\u7528\u6807\u8bc6\u4fdd\u7559"}),"\uff1a\u53cd\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u4fdd\u6301\u76f8\u540c\u7684\u5171\u4eab\u5173\u7cfb"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u5faa\u73af\u5f15\u7528\u652f\u6301"}),"\uff1a\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"RcWeak<T>"})," \u548c ",(0,s.jsx)(n.code,{children:"ArcWeak<T>"})," \u6253\u7834\u5faa\u73af"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"\u4f7f\u7528-rcarc-\u7684\u5171\u4eab\u5f15\u7528",children:"\u4f7f\u7528 Rc/Arc \u7684\u5171\u4eab\u5f15\u7528"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use fory::Fory;\nuse std::rc::Rc;\n\nlet fory = Fory::default();\n\n// \u521b\u5efa\u4e00\u4e2a\u5171\u4eab\u503c\nlet shared = Rc::new(String::from("shared_value"));\n\n// \u591a\u6b21\u5f15\u7528\u5b83\nlet data = vec![shared.clone(), shared.clone(), shared.clone()];\n\n// \u5171\u4eab\u503c\u53ea\u88ab\u5e8f\u5217\u5316\u4e00\u6b21\nlet bytes = fory.serialize(&data);\nlet decoded: Vec<Rc<String>> = fory.deserialize(&bytes)?;\n\n// \u9a8c\u8bc1\u5f15\u7528\u6807\u8bc6\u88ab\u4fdd\u7559\nassert_eq!(decoded.len(), 3);\nassert_eq!(*decoded[0], "shared_value");\n\n// \u6240\u6709\u4e09\u4e2a Rc \u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\nassert!(Rc::ptr_eq(&decoded[0], &decoded[1]));\nassert!(Rc::ptr_eq(&decoded[1], &decoded[2]));\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\u5bf9\u4e8e\u7ebf\u7a0b\u5b89\u5168\u7684\u5171\u4eab\u5f15\u7528\uff0c\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"Arc<T>"}),"\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use std::sync::Arc;\n\nlet shared = Arc::new(String::from("shared_value"));\nlet data = vec![shared.clone(), shared.clone(), shared.clone()];\n\nlet bytes = fory.serialize(&data);\nlet decoded: Vec<Arc<String>> = fory.deserialize(&bytes)?;\n\n// Arc \u4e5f\u4fdd\u7559\u5f15\u7528\u6807\u8bc6\nassert!(Arc::ptr_eq(&decoded[0], &decoded[1]));\n'})}),"\n",(0,s.jsx)(n.h4,{id:"\u4f7f\u7528\u5f31\u6307\u9488\u7684\u5faa\u73af\u5f15\u7528",children:"\u4f7f\u7528\u5f31\u6307\u9488\u7684\u5faa\u73af\u5f15\u7528"}),"\n",(0,s.jsxs)(n.p,{children:["\u8981\u5e8f\u5217\u5316\u50cf\u7236\u5b50\u5173\u7cfb\u6216\u53cc\u5411\u94fe\u8868\u7ed3\u6784\u8fd9\u6837\u7684\u5faa\u73af\u5f15\u7528\uff0c\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"RcWeak<T>"})," \u6216 ",(0,s.jsx)(n.code,{children:"ArcWeak<T>"})," \u6765\u6253\u7834\u5faa\u73af\u3002\u8fd9\u4e9b\u5f31\u6307\u9488\u88ab\u5e8f\u5217\u5316\u4e3a\u5bf9\u5176\u5f3a\u6307\u9488\u5bf9\u5e94\u7269\u7684\u5f15\u7528\uff0c\u5728\u4e0d\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u6216\u65e0\u9650\u9012\u5f52\u7684\u60c5\u51b5\u4e0b\u4fdd\u7559\u56fe\u7ed3\u6784\u3002"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u5de5\u4f5c\u539f\u7406\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5f31\u6307\u9488\u5e8f\u5217\u5316\u4e3a\u5bf9\u5176\u76ee\u6807\u5bf9\u8c61\u7684\u5f15\u7528"}),"\n",(0,s.jsxs)(n.li,{children:["\u5982\u679c\u5f3a\u6307\u9488\u5df2\u88ab\u4e22\u5f03\uff0c\u5f31\u6307\u9488\u5e8f\u5217\u5316\u4e3a ",(0,s.jsx)(n.code,{children:"Null"})]}),"\n",(0,s.jsx)(n.li,{children:"\u524d\u5411\u5f15\u7528\uff08\u5f31\u6307\u9488\u5728\u76ee\u6807\u4e4b\u524d\u51fa\u73b0\uff09\u901a\u8fc7\u56de\u8c03\u89e3\u6790"}),"\n",(0,s.jsx)(n.li,{children:"\u5f31\u6307\u9488\u7684\u6240\u6709\u514b\u9686\u5171\u4eab\u76f8\u540c\u7684\u5185\u90e8 cell \u4ee5\u5b9e\u73b0\u81ea\u52a8\u66f4\u65b0"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"use fory::{Fory, Error};\nuse fory::ForyObject;\nuse fory::RcWeak;\nuse std::rc::Rc;\nuse std::cell::RefCell;\n\n#[derive(ForyObject, Debug)]\nstruct Node {\n    value: i32,\n    parent: RcWeak<RefCell<Node>>,\n    children: Vec<Rc<RefCell<Node>>>,\n}\n\nlet mut fory = Fory::default();\nfory.register::<Node>(2000);\n\n// Build a parent-child tree\nlet parent = Rc::new(RefCell::new(Node {\n    value: 1,\n    parent: RcWeak::new(),\n    children: vec![],\n}));\n\nlet child1 = Rc::new(RefCell::new(Node {\n    value: 2,\n    parent: RcWeak::from(&parent),\n    children: vec![],\n}));\n\nlet child2 = Rc::new(RefCell::new(Node {\n    value: 3,\n    parent: RcWeak::from(&parent),\n    children: vec![],\n}));\n\nparent.borrow_mut().children.push(child1.clone());\nparent.borrow_mut().children.push(child2.clone());\n\n// \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5faa\u73af\u7ed3\u6784\nlet bytes = fory.serialize(&parent);\nlet decoded: Rc<RefCell<Node>> = fory.deserialize(&bytes)?;\n\n// \u9a8c\u8bc1\u5faa\u73af\u5173\u7cfb\nassert_eq!(decoded.borrow().children.len(), 2);\nfor child in &decoded.borrow().children {\n    let upgraded_parent = child.borrow().parent.upgrade().unwrap();\n    assert!(Rc::ptr_eq(&decoded, &upgraded_parent));\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u4f7f\u7528 Arc \u7684\u7ebf\u7a0b\u5b89\u5168\u5faa\u73af\u56fe\uff1a"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"use fory::{Fory, Error};\nuse fory::ForyObject;\nuse fory::ArcWeak;\nuse std::sync::{Arc, Mutex};\n\n#[derive(ForyObject)]\nstruct Node {\n    val: i32,\n    parent: ArcWeak<Mutex<Node>>,\n    children: Vec<Arc<Mutex<Node>>>,\n}\n\nlet mut fory = Fory::default();\nfory.register::<Node>(6000);\n\nlet parent = Arc::new(Mutex::new(Node {\n    val: 10,\n    parent: ArcWeak::new(),\n    children: vec![],\n}));\n\nlet child1 = Arc::new(Mutex::new(Node {\n    val: 20,\n    parent: ArcWeak::from(&parent),\n    children: vec![],\n}));\n\nlet child2 = Arc::new(Mutex::new(Node {\n    val: 30,\n    parent: ArcWeak::from(&parent),\n    children: vec![],\n}));\n\nparent.lock().unwrap().children.push(child1.clone());\nparent.lock().unwrap().children.push(child2.clone());\n\nlet bytes = fory.serialize(&parent);\nlet decoded: Arc<Mutex<Node>> = fory.deserialize(&bytes)?;\n\nassert_eq!(decoded.lock().unwrap().children.len(), 2);\nfor child in &decoded.lock().unwrap().children {\n    let upgraded_parent = child.lock().unwrap().parent.upgrade().unwrap();\n    assert!(Arc::ptr_eq(&decoded, &upgraded_parent));\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-trait-\u5bf9\u8c61\u5e8f\u5217\u5316",children:"3. Trait \u5bf9\u8c61\u5e8f\u5217\u5316"}),"\n",(0,s.jsx)(n.p,{children:"Apache Fory\u2122 \u901a\u8fc7 trait \u5bf9\u8c61\u652f\u6301\u591a\u6001\u5e8f\u5217\u5316\uff0c\u5b9e\u73b0\u52a8\u6001\u5206\u53d1\u548c\u7c7b\u578b\u7075\u6d3b\u6027\u3002\u8fd9\u5bf9\u4e8e\u63d2\u4ef6\u7cfb\u7edf\u3001\u5f02\u6784\u96c6\u5408\u548c\u53ef\u6269\u5c55\u67b6\u6784\u81f3\u5173\u91cd\u8981\u3002"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u652f\u6301\u7684 trait \u5bf9\u8c61\u7c7b\u578b\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Box<dyn Trait>"})," - \u62e5\u6709\u6240\u6709\u6743\u7684 trait \u5bf9\u8c61"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Rc<dyn Trait>"})," - \u5f15\u7528\u8ba1\u6570\u7684 trait \u5bf9\u8c61"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Arc<dyn Trait>"})," - \u7ebf\u7a0b\u5b89\u5168\u7684\u5f15\u7528\u8ba1\u6570 trait \u5bf9\u8c61"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Vec<Box<dyn Trait>>"}),"\u3001",(0,s.jsx)(n.code,{children:"HashMap<K, Box<dyn Trait>>"})," - trait \u5bf9\u8c61\u96c6\u5408"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"\u57fa\u672c-trait-\u5bf9\u8c61\u5e8f\u5217\u5316",children:"\u57fa\u672c Trait \u5bf9\u8c61\u5e8f\u5217\u5316"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use fory::{Fory, register_trait_type};\nuse fory::Serializer;\nuse fory::ForyObject;\n\ntrait Animal: Serializer {\n    fn speak(&self) -> String;\n    fn name(&self) -> &str;\n}\n\n#[derive(ForyObject)]\nstruct Dog { name: String, breed: String }\n\nimpl Animal for Dog {\n    fn speak(&self) -> String { "Woof!".to_string() }\n    fn name(&self) -> &str { &self.name }\n}\n\n#[derive(ForyObject)]\nstruct Cat { name: String, color: String }\n\nimpl Animal for Cat {\n    fn speak(&self) -> String { "Meow!".to_string() }\n    fn name(&self) -> &str { &self.name }\n}\n\n// \u6ce8\u518c trait \u5b9e\u73b0\nregister_trait_type!(Animal, Dog, Cat);\n\n#[derive(ForyObject)]\nstruct Zoo {\n    star_animal: Box<dyn Animal>,\n}\n\nlet mut fory = Fory::default().compatible(true);\nfory.register::<Dog>(100);\nfory.register::<Cat>(101);\nfory.register::<Zoo>(102);\n\nlet zoo = Zoo {\n    star_animal: Box::new(Dog {\n        name: "Buddy".to_string(),\n        breed: "Labrador".to_string(),\n    }),\n};\n\nlet bytes = fory.serialize(&zoo);\nlet decoded: Zoo = fory.deserialize(&bytes)?;\n\nassert_eq!(decoded.star_animal.name(), "Buddy");\nassert_eq!(decoded.star_animal.speak(), "Woof!");\n'})}),"\n",(0,s.jsxs)(n.h4,{id:"\u5e8f\u5217\u5316-dyn-any-trait-\u5bf9\u8c61",children:["\u5e8f\u5217\u5316 ",(0,s.jsx)(n.code,{children:"dyn Any"})," Trait \u5bf9\u8c61"]}),"\n",(0,s.jsxs)(n.p,{children:["Apache Fory\u2122 \u652f\u6301\u5e8f\u5217\u5316 ",(0,s.jsx)(n.code,{children:"Rc<dyn Any>"})," \u548c ",(0,s.jsx)(n.code,{children:"Arc<dyn Any>"})," \u4ee5\u5b9e\u73b0\u8fd0\u884c\u65f6\u7c7b\u578b\u5206\u53d1\u3002\u8fd9\u5728\u4f60\u9700\u8981\u6700\u5927\u7075\u6d3b\u6027\u4e14\u4e0d\u60f3\u5b9a\u4e49\u81ea\u5b9a\u4e49 trait \u65f6\u5f88\u6709\u7528\u3002"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u5173\u952e\u70b9\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u9002\u7528\u4e8e\u4efb\u4f55\u5b9e\u73b0 ",(0,s.jsx)(n.code,{children:"Serializer"})," \u7684\u7c7b\u578b"]}),"\n",(0,s.jsx)(n.li,{children:"\u53cd\u5e8f\u5217\u5316\u540e\u9700\u8981\u5411\u4e0b\u8f6c\u578b\u4ee5\u8bbf\u95ee\u5177\u4f53\u7c7b\u578b"}),"\n",(0,s.jsx)(n.li,{children:"\u5e8f\u5217\u5316\u671f\u95f4\u4fdd\u7559\u7c7b\u578b\u4fe1\u606f"}),"\n",(0,s.jsx)(n.li,{children:"\u9002\u7528\u4e8e\u63d2\u4ef6\u7cfb\u7edf\u548c\u52a8\u6001\u7c7b\u578b\u5904\u7406"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use std::rc::Rc;\nuse std::any::Any;\n\nlet dog_rc: Rc<dyn Animal> = Rc::new(Dog {\n    name: "Rex".to_string(),\n    breed: "Golden".to_string()\n});\n\n// \u8f6c\u6362\u4e3a Rc<dyn Any> \u7528\u4e8e\u5e8f\u5217\u5316\nlet dog_any: Rc<dyn Any> = dog_rc.clone();\n\n// \u5e8f\u5217\u5316 Any \u5305\u88c5\u5668\nlet bytes = fory.serialize(&dog_any);\nlet decoded: Rc<dyn Any> = fory.deserialize(&bytes)?;\n\n// \u5411\u4e0b\u8f6c\u578b\u56de\u5177\u4f53\u7c7b\u578b\nlet unwrapped = decoded.downcast_ref::<Dog>().unwrap();\nassert_eq!(unwrapped.name, "Rex");\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\u5bf9\u4e8e\u7ebf\u7a0b\u5b89\u5168\u573a\u666f\uff0c\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"Arc<dyn Any>"}),"\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use std::sync::Arc;\nuse std::any::Any;\n\nlet dog_arc: Arc<dyn Animal> = Arc::new(Dog {\n    name: "Buddy".to_string(),\n    breed: "Labrador".to_string()\n});\n\n// \u8f6c\u6362\u4e3a Arc<dyn Any>\nlet dog_any: Arc<dyn Any> = dog_arc.clone();\n\nlet bytes = fory.serialize(&dog_any);\nlet decoded: Arc<dyn Any> = fory.deserialize(&bytes)?;\n\n// \u5411\u4e0b\u8f6c\u578b\u4e3a\u5177\u4f53\u7c7b\u578b\nlet unwrapped = decoded.downcast_ref::<Dog>().unwrap();\nassert_eq!(unwrapped.name, "Buddy");\n'})}),"\n",(0,s.jsx)(n.h4,{id:"\u7ed3\u6784\u4f53\u4e2d\u57fa\u4e8e-rcarc-\u7684-trait-\u5bf9\u8c61",children:"\u7ed3\u6784\u4f53\u4e2d\u57fa\u4e8e Rc/Arc \u7684 Trait \u5bf9\u8c61"}),"\n",(0,s.jsxs)(n.p,{children:["\u5bf9\u4e8e\u5e26\u6709 ",(0,s.jsx)(n.code,{children:"Rc<dyn Trait>"})," \u6216 ",(0,s.jsx)(n.code,{children:"Arc<dyn Trait>"})," \u7684\u5b57\u6bb5\uff0cFory \u81ea\u52a8\u5904\u7406\u8f6c\u6362\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use std::sync::Arc;\nuse std::rc::Rc;\nuse std::collections::HashMap;\n\n#[derive(ForyObject)]\nstruct AnimalShelter {\n    animals_rc: Vec<Rc<dyn Animal>>,\n    animals_arc: Vec<Arc<dyn Animal>>,\n    registry: HashMap<String, Arc<dyn Animal>>,\n}\n\nlet mut fory = Fory::default().compatible(true);\nfory.register::<Dog>(100);\nfory.register::<Cat>(101);\nfory.register::<AnimalShelter>(102);\n\nlet shelter = AnimalShelter {\n    animals_rc: vec![\n        Rc::new(Dog { name: "Rex".to_string(), breed: "Golden".to_string() }),\n        Rc::new(Cat { name: "Mittens".to_string(), color: "Gray".to_string() }),\n    ],\n    animals_arc: vec![\n        Arc::new(Dog { name: "Buddy".to_string(), breed: "Labrador".to_string() }),\n    ],\n    registry: HashMap::from([\n        ("pet1".to_string(), Arc::new(Dog {\n            name: "Max".to_string(),\n            breed: "Shepherd".to_string()\n        }) as Arc<dyn Animal>),\n    ]),\n};\n\nlet bytes = fory.serialize(&shelter);\nlet decoded: AnimalShelter = fory.deserialize(&bytes)?;\n\nassert_eq!(decoded.animals_rc[0].name(), "Rex");\nassert_eq!(decoded.animals_arc[0].speak(), "Woof!");\n'})}),"\n",(0,s.jsx)(n.h4,{id:"\u72ec\u7acb-trait-\u5bf9\u8c61\u5e8f\u5217\u5316",children:"\u72ec\u7acb Trait \u5bf9\u8c61\u5e8f\u5217\u5316"}),"\n",(0,s.jsxs)(n.p,{children:["\u7531\u4e8e Rust \u7684\u5b64\u513f\u89c4\u5219\uff0c",(0,s.jsx)(n.code,{children:"Rc<dyn Trait>"})," \u548c ",(0,s.jsx)(n.code,{children:"Arc<dyn Trait>"})," \u4e0d\u80fd\u76f4\u63a5\u5b9e\u73b0 ",(0,s.jsx)(n.code,{children:"Serializer"}),"\u3002\u5bf9\u4e8e\u72ec\u7acb\u5e8f\u5217\u5316\uff08\u4e0d\u5728\u7ed3\u6784\u4f53\u5b57\u6bb5\u5185\uff09\uff0c",(0,s.jsx)(n.code,{children:"register_trait_type!"})," \u5b8f\u4f1a\u751f\u6210\u5305\u88c5\u5668\u7c7b\u578b\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u6ce8\u610f\uff1a"})," \u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u5305\u88c5\u5668\u7c7b\u578b\uff0c\u53ef\u4ee5\u6539\u4e3a\u5e8f\u5217\u5316\u4e3a ",(0,s.jsx)(n.code,{children:"Rc<dyn Any>"})," \u6216 ",(0,s.jsx)(n.code,{children:"Arc<dyn Any>"}),"\uff08\u53c2\u89c1\u4e0a\u9762\u7684 ",(0,s.jsx)(n.code,{children:"dyn Any"})," \u90e8\u5206\uff09\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"register_trait_type!"})," \u5b8f\u751f\u6210 ",(0,s.jsx)(n.code,{children:"AnimalRc"})," \u548c ",(0,s.jsx)(n.code,{children:"AnimalArc"})," \u5305\u88c5\u5668\u7c7b\u578b\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'// \u5bf9\u4e8e Rc<dyn Trait>\nlet dog_rc: Rc<dyn Animal> = Rc::new(Dog {\n    name: "Rex".to_string(),\n    breed: "Golden".to_string()\n});\nlet wrapper = AnimalRc::from(dog_rc);\n\nlet bytes = fory.serialize(&wrapper);\nlet decoded: AnimalRc = fory.deserialize(&bytes)?;\n\n// \u89e3\u5305\u56de Rc<dyn Animal>\nlet unwrapped: Rc<dyn Animal> = decoded.unwrap();\nassert_eq!(unwrapped.name(), "Rex");\n\n// \u5bf9\u4e8e Arc<dyn Trait>\nlet dog_arc: Arc<dyn Animal> = Arc::new(Dog {\n    name: "Buddy".to_string(),\n    breed: "Labrador".to_string()\n});\nlet wrapper = AnimalArc::from(dog_arc);\n\nlet bytes = fory.serialize(&wrapper);\nlet decoded: AnimalArc = fory.deserialize(&bytes)?;\n\nlet unwrapped: Arc<dyn Animal> = decoded.unwrap();\nassert_eq!(unwrapped.name(), "Buddy");\n'})}),"\n",(0,s.jsx)(n.h3,{id:"4-schema-\u6f14\u8fdb",children:"4. Schema \u6f14\u8fdb"}),"\n",(0,s.jsxs)(n.p,{children:["Apache Fory\u2122 \u5728",(0,s.jsx)(n.strong,{children:"\u517c\u5bb9\u6a21\u5f0f"}),"\u4e0b\u652f\u6301 schema \u6f14\u8fdb\uff0c\u5141\u8bb8\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u7aef\u62e5\u6709\u4e0d\u540c\u7684\u7c7b\u578b\u5b9a\u4e49\u3002\u8fd9\u4f7f\u5f97\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u670d\u52a1\u80fd\u591f\u72ec\u7acb\u6f14\u8fdb\u800c\u4e0d\u7834\u574f\u517c\u5bb9\u6027\u3002"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u7279\u6027\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u6dfb\u52a0\u5e26\u9ed8\u8ba4\u503c\u7684\u65b0\u5b57\u6bb5"}),"\n",(0,s.jsx)(n.li,{children:"\u79fb\u9664\u8fc7\u65f6\u5b57\u6bb5\uff08\u53cd\u5e8f\u5217\u5316\u671f\u95f4\u8df3\u8fc7\uff09"}),"\n",(0,s.jsxs)(n.li,{children:["\u6539\u53d8\u5b57\u6bb5\u53ef\u7a7a\u6027\uff08",(0,s.jsx)(n.code,{children:"T"})," \u2194 ",(0,s.jsx)(n.code,{children:"Option<T>"}),"\uff09"]}),"\n",(0,s.jsx)(n.li,{children:"\u91cd\u65b0\u6392\u5e8f\u5b57\u6bb5\uff08\u6309\u540d\u79f0\u5339\u914d\uff0c\u800c\u975e\u4f4d\u7f6e\uff09"}),"\n",(0,s.jsx)(n.li,{children:"\u4e3a\u7f3a\u5931\u5b57\u6bb5\u63d0\u4f9b\u7c7b\u578b\u5b89\u5168\u7684\u9ed8\u8ba4\u503c\u56de\u9000"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u517c\u5bb9\u6027\u89c4\u5219\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5b57\u6bb5\u540d\u5fc5\u987b\u5339\u914d\uff08\u533a\u5206\u5927\u5c0f\u5199\uff09"}),"\n",(0,s.jsx)(n.li,{children:"\u4e0d\u652f\u6301\u7c7b\u578b\u66f4\u6539\uff08\u53ef\u7a7a/\u975e\u53ef\u7a7a\u9664\u5916\uff09"}),"\n",(0,s.jsx)(n.li,{children:"\u5d4c\u5957\u7ed3\u6784\u4f53\u7c7b\u578b\u5fc5\u987b\u5728\u4e24\u7aef\u90fd\u6ce8\u518c"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use fory::Fory;\nuse fory::ForyObject;\nuse std::collections::HashMap;\n\n#[derive(ForyObject, Debug)]\nstruct PersonV1 {\n    name: String,\n    age: i32,\n    address: String,\n}\n\n#[derive(ForyObject, Debug)]\nstruct PersonV2 {\n    name: String,\n    age: i32,\n    // address removed\n    // phone added\n    phone: Option<String>,\n    metadata: HashMap<String, String>,\n}\n\nlet mut fory1 = Fory::default().compatible(true);\nfory1.register::<PersonV1>(1);\n\nlet mut fory2 = Fory::default().compatible(true);\nfory2.register::<PersonV2>(1);\n\nlet person_v1 = PersonV1 {\n    name: "Alice".to_string(),\n    age: 30,\n    address: "123 Main St".to_string(),\n};\n\n// \u4f7f\u7528 V1 \u5e8f\u5217\u5316\nlet bytes = fory1.serialize(&person_v1);\n\n// \u4f7f\u7528 V2 \u53cd\u5e8f\u5217\u5316 - \u7f3a\u5931\u5b57\u6bb5\u83b7\u5f97\u9ed8\u8ba4\u503c\nlet person_v2: PersonV2 = fory2.deserialize(&bytes)?;\nassert_eq!(person_v2.name, "Alice");\nassert_eq!(person_v2.age, 30);\nassert_eq!(person_v2.phone, None);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"5-\u679a\u4e3e\u652f\u6301",children:"5. \u679a\u4e3e\u652f\u6301"}),"\n",(0,s.jsx)(n.p,{children:"Apache Fory\u2122 \u652f\u6301\u65e0\u6570\u636e\u8f7d\u8377\u7684\u679a\u4e3e\uff08C \u98ce\u683c\u679a\u4e3e\uff09\u3002\u6bcf\u4e2a\u53d8\u4f53\u5728\u5e8f\u5217\u5316\u671f\u95f4\u88ab\u5206\u914d\u4e00\u4e2a\u5e8f\u6570\u503c\uff080\u30011\u30012\u3001...\uff09\u3002"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u7279\u6027\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u9ad8\u6548\u7684 varint \u7f16\u7801\u5e8f\u6570"}),"\n",(0,s.jsx)(n.li,{children:"\u517c\u5bb9\u6a21\u5f0f\u4e0b\u7684 schema \u6f14\u8fdb\u652f\u6301"}),"\n",(0,s.jsx)(n.li,{children:"\u7c7b\u578b\u5b89\u5168\u7684\u53d8\u4f53\u5339\u914d"}),"\n",(0,s.jsxs)(n.li,{children:["\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"#[default]"})," \u7684\u9ed8\u8ba4\u53d8\u4f53\u652f\u6301"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"use fory::ForyObject;\n\n#[derive(Default, ForyObject, Debug, PartialEq)]\nenum Status {\n    #[default]\n    Pending,\n    Active,\n    Inactive,\n    Deleted,\n}\n\nlet mut fory = Fory::default();\nfory.register::<Status>(1);\n\nlet status = Status::Active;\nlet bytes = fory.serialize(&status);\nlet decoded: Status = fory.deserialize(&bytes)?;\nassert_eq!(status, decoded);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"6-\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u5668",children:"6. \u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\u5668"}),"\n",(0,s.jsxs)(n.p,{children:["\u5bf9\u4e8e\u4e0d\u80fd\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"#[derive(ForyObject)]"})," \u7684\u7c7b\u578b\uff0c\u624b\u52a8\u5b9e\u73b0 ",(0,s.jsx)(n.code,{children:"Serializer"})," trait\u3002\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5f88\u6709\u7528\uff1a"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u6765\u81ea\u5176\u4ed6 crate \u7684\u5916\u90e8\u7c7b\u578b"}),"\n",(0,s.jsx)(n.li,{children:"\u5177\u6709\u7279\u6b8a\u5e8f\u5217\u5316\u8981\u6c42\u7684\u7c7b\u578b"}),"\n",(0,s.jsx)(n.li,{children:"\u65e7\u7248\u6570\u636e\u683c\u5f0f\u517c\u5bb9\u6027"}),"\n",(0,s.jsx)(n.li,{children:"\u6027\u80fd\u5173\u952e\u7684\u81ea\u5b9a\u4e49\u7f16\u7801"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use fory::{Fory, ReadContext, WriteContext, Serializer, ForyDefault, Error};\nuse std::any::Any;\n\n#[derive(Debug, PartialEq)]\nstruct CustomType {\n    value: i32,\n    name: String,\n}\n\nimpl Serializer for CustomType {\n    fn fory_write_data(&self, context: &mut WriteContext, is_field: bool) {\n        context.writer.write_i32(self.value);\n        context.writer.write_varuint32(self.name.len() as u32);\n        context.writer.write_utf8_string(&self.name);\n    }\n\n    fn fory_read_data(context: &mut ReadContext, is_field: bool) -> Result<Self, Error> {\n        let value = context.reader.read_i32();\n        let len = context.reader.read_varuint32() as usize;\n        let name = context.reader.read_utf8_string(len);\n        Ok(Self { value, name })\n    }\n\n    fn fory_type_id_dyn(&self, type_resolver: &TypeResolver) -> u32 {\n        Self::fory_get_type_id(type_resolver)\n    }\n\n    fn as_any(&self) -> &dyn Any {\n        self\n    }\n}\n\nimpl ForyDefault for CustomType {\n    fn fory_default() -> Self {\n        Self::default()\n    }\n}\n\nlet mut fory = Fory::default();\nfory.register_serializer::<CustomType>(100);\n\nlet custom = CustomType {\n    value: 42,\n    name: "test".to_string(),\n};\nlet bytes = fory.serialize(&custom);\nlet decoded: CustomType = fory.deserialize(&bytes)?;\nassert_eq!(custom, decoded);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"7-\u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316",children:"7. \u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316"}),"\n",(0,s.jsxs)(n.p,{children:["Apache Fory\u2122 \u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6027\u80fd\u7684",(0,s.jsx)(n.strong,{children:"\u884c\u683c\u5f0f"}),"\u7528\u4e8e\u96f6\u62f7\u8d1d\u53cd\u5e8f\u5217\u5316\u3002\u4e0e\u4f20\u7edf\u7684\u5bf9\u8c61\u5e8f\u5217\u5316\u5728\u5185\u5b58\u4e2d\u91cd\u6784\u6574\u4e2a\u5bf9\u8c61\u4e0d\u540c\uff0c\u884c\u683c\u5f0f\u5b9e\u73b0\u4e86",(0,s.jsx)(n.strong,{children:"\u76f4\u63a5\u4ece\u4e8c\u8fdb\u5236\u6570\u636e\u968f\u673a\u8bbf\u95ee"}),"\u5b57\u6bb5\uff0c\u65e0\u9700\u5b8c\u5168\u53cd\u5e8f\u5217\u5316\u3002"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u5173\u952e\u4f18\u52bf\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u96f6\u62f7\u8d1d\u8bbf\u95ee"}),"\uff1a\u65e0\u9700\u5206\u914d\u6216\u590d\u5236\u6570\u636e\u5373\u53ef\u8bfb\u53d6\u5b57\u6bb5"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u90e8\u5206\u53cd\u5e8f\u5217\u5316"}),"\uff1a\u53ea\u8bbf\u95ee\u4f60\u9700\u8981\u7684\u5b57\u6bb5"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u5185\u5b58\u6620\u5c04\u6587\u4ef6"}),"\uff1a\u5904\u7406\u5927\u4e8e RAM \u7684\u6570\u636e"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u7f13\u5b58\u53cb\u597d"}),"\uff1a\u987a\u5e8f\u5185\u5b58\u5e03\u5c40\u4ee5\u83b7\u5f97\u66f4\u597d\u7684 CPU \u7f13\u5b58\u5229\u7528\u7387"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u60f0\u6027\u6c42\u503c"}),"\uff1a\u5c06\u6602\u8d35\u7684\u64cd\u4f5c\u5ef6\u8fdf\u5230\u5b57\u6bb5\u8bbf\u95ee\u65f6"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u4f55\u65f6\u4f7f\u7528\u884c\u683c\u5f0f\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5177\u6709\u9009\u62e9\u6027\u5b57\u6bb5\u8bbf\u95ee\u7684\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d"}),"\n",(0,s.jsx)(n.li,{children:"\u53ea\u9700\u8981\u5b57\u6bb5\u5b50\u96c6\u7684\u5927\u578b\u6570\u636e\u96c6"}),"\n",(0,s.jsx)(n.li,{children:"\u5185\u5b58\u53d7\u9650\u73af\u5883"}),"\n",(0,s.jsx)(n.li,{children:"\u9ad8\u541e\u5410\u91cf\u6570\u636e\u7ba1\u9053"}),"\n",(0,s.jsx)(n.li,{children:"\u4ece\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u6216\u5171\u4eab\u5185\u5b58\u4e2d\u8bfb\u53d6"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u5de5\u4f5c\u539f\u7406\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5b57\u6bb5\u5728\u4e8c\u8fdb\u5236\u884c\u4e2d\u7f16\u7801\uff0c\u57fa\u672c\u7c7b\u578b\u5177\u6709\u56fa\u5b9a\u504f\u79fb\u91cf"}),"\n",(0,s.jsx)(n.li,{children:"\u53ef\u53d8\u957f\u5ea6\u6570\u636e\uff08\u5b57\u7b26\u4e32\u3001\u96c6\u5408\uff09\u4f7f\u7528\u504f\u79fb\u6307\u9488\u5b58\u50a8"}),"\n",(0,s.jsx)(n.li,{children:"\u7a7a\u503c\u4f4d\u56fe\u8ffd\u8e2a\u54ea\u4e9b\u5b57\u6bb5\u5b58\u5728"}),"\n",(0,s.jsx)(n.li,{children:"\u901a\u8fc7\u9012\u5f52\u884c\u7f16\u7801\u652f\u6301\u5d4c\u5957\u7ed3\u6784"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use fory::{to_row, from_row};\nuse fory::ForyRow;\nuse std::collections::BTreeMap;\n\n#[derive(ForyRow)]\nstruct UserProfile {\n    id: i64,\n    username: String,\n    email: String,\n    scores: Vec<i32>,\n    preferences: BTreeMap<String, String>,\n    is_active: bool,\n}\n\nlet profile = UserProfile {\n    id: 12345,\n    username: "alice".to_string(),\n    email: "alice@example.com".to_string(),\n    scores: vec![95, 87, 92, 88],\n    preferences: BTreeMap::from([\n        ("theme".to_string(), "dark".to_string()),\n        ("language".to_string(), "en".to_string()),\n    ]),\n    is_active: true,\n};\n\n// \u5e8f\u5217\u5316\u4e3a\u884c\u683c\u5f0f\nlet row_data = to_row(&profile);\n\n// \u96f6\u62f7\u8d1d\u53cd\u5e8f\u5217\u5316 - \u65e0\u5bf9\u8c61\u5206\u914d\uff01\nlet row = from_row::<UserProfile>(&row_data);\n\n// \u76f4\u63a5\u4ece\u4e8c\u8fdb\u5236\u6570\u636e\u8bbf\u95ee\u5b57\u6bb5\nassert_eq!(row.id(), 12345);\nassert_eq!(row.username(), "alice");\nassert_eq!(row.email(), "alice@example.com");\nassert_eq!(row.is_active(), true);\n\n// \u9ad8\u6548\u8bbf\u95ee\u96c6\u5408\nlet scores = row.scores();\nassert_eq!(scores.size(), 4);\nassert_eq!(scores.get(0), 95);\nassert_eq!(scores.get(1), 87);\n\nlet prefs = row.preferences();\nassert_eq!(prefs.keys().size(), 2);\nassert_eq!(prefs.keys().get(0), "language");\nassert_eq!(prefs.values().get(0), "en");\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u6027\u80fd\u6bd4\u8f83\uff1a"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u64cd\u4f5c"}),(0,s.jsx)(n.th,{children:"\u5bf9\u8c61\u683c\u5f0f"}),(0,s.jsx)(n.th,{children:"\u884c\u683c\u5f0f"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\u5b8c\u5168\u53cd\u5e8f\u5217\u5316"}),(0,s.jsx)(n.td,{children:"\u5206\u914d\u6240\u6709\u5bf9\u8c61"}),(0,s.jsx)(n.td,{children:"\u96f6\u5206\u914d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\u5355\u5b57\u6bb5\u8bbf\u95ee"}),(0,s.jsx)(n.td,{children:"\u9700\u8981\u5b8c\u5168\u53cd\u5e8f\u5217\u5316"}),(0,s.jsx)(n.td,{children:"\u76f4\u63a5\u504f\u79fb\u8bfb\u53d6"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\u5185\u5b58\u4f7f\u7528"}),(0,s.jsx)(n.td,{children:"\u5185\u5b58\u4e2d\u7684\u5b8c\u6574\u5bf9\u8c61\u56fe"}),(0,s.jsx)(n.td,{children:"\u4ec5\u8bbf\u95ee\u7684\u5b57\u6bb5\u5728\u5185\u5b58\u4e2d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"\u9002\u7528\u4e8e"}),(0,s.jsx)(n.td,{children:"\u5c0f\u5bf9\u8c61\uff0c\u5b8c\u5168\u8bbf\u95ee"}),(0,s.jsx)(n.td,{children:"\u5927\u5bf9\u8c61\uff0c\u9009\u62e9\u6027\u8bbf\u95ee"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"8-\u7ebf\u7a0b\u5b89\u5168\u5e8f\u5217\u5316",children:"8. \u7ebf\u7a0b\u5b89\u5168\u5e8f\u5217\u5316"}),"\n",(0,s.jsxs)(n.p,{children:["Apache Fory\u2122 Rust \u5b8c\u5168\u7ebf\u7a0b\u5b89\u5168\uff1a",(0,s.jsx)(n.code,{children:"Fory"})," \u540c\u65f6\u5b9e\u73b0\u4e86 ",(0,s.jsx)(n.code,{children:"Send"})," \u548c ",(0,s.jsx)(n.code,{children:"Sync"}),"\uff0c\u56e0\u6b64\u4e00\u4e2a\u914d\u7f6e\u597d\u7684\u5b9e\u4f8b\u53ef\u4ee5\u5728\u7ebf\u7a0b\u95f4\u5171\u4eab\u4ee5\u8fdb\u884c\u5e76\u53d1\u5de5\u4f5c\u3002\u5185\u90e8\u7684\u8bfb/\u5199\u4e0a\u4e0b\u6587\u6c60\u901a\u8fc7\u7ebf\u7a0b\u5b89\u5168\u539f\u8bed\u8fdb\u884c\u60f0\u6027\u521d\u59cb\u5316\uff0c\u8ba9\u5de5\u4f5c\u7ebf\u7a0b\u65e0\u9700\u534f\u8c03\u5373\u53ef\u91cd\u7528\u7f13\u51b2\u533a\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"use fory::{Fory, Error};\nuse fory::ForyObject;\nuse std::sync::Arc;\nuse std::thread;\n\n#[derive(ForyObject, Clone, Copy, Debug, PartialEq)]\nstruct Item {\n    value: i32,\n}\n\nfn main() -> Result<(), Error> {\n    let mut fory = Fory::default();\n    fory.register::<Item>(1000)?;\n\n    let fory = Arc::new(fory);\n    let handles: Vec<_> = (0..8)\n        .map(|i| {\n            let shared = Arc::clone(&fory);\n            thread::spawn(move || {\n                let item = Item { value: i };\n                shared.serialize(&item)\n            })\n        })\n        .collect();\n\n    for handle in handles {\n        let bytes = handle.join().unwrap()?;\n        let item: Item = fory.deserialize(&bytes)?;\n        assert!(item.value >= 0);\n    }\n\n    Ok(())\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\u63d0\u793a\uff1a"})," \u5728\u751f\u6210\u7ebf\u7a0b\u4e4b\u524d\u6267\u884c\u6ce8\u518c\uff08\u5982 ",(0,s.jsx)(n.code,{children:"fory.register::<T>(id)"}),"\uff09\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u90fd\u80fd\u770b\u5230\u76f8\u540c\u7684\u5143\u6570\u636e\u3002\u4e00\u65e6\u914d\u7f6e\u5b8c\u6210\uff0c\u5c06\u5b9e\u4f8b\u5305\u88c5\u5728 ",(0,s.jsx)(n.code,{children:"Arc"})," \u4e2d\u5c31\u8db3\u4ee5\u5b89\u5168\u5730\u5206\u53d1\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4efb\u52a1\u3002"]}),"\n",(0,s.jsx)(n.h2,{id:"-\u652f\u6301\u7684\u7c7b\u578b",children:"\ud83d\udd27 \u652f\u6301\u7684\u7c7b\u578b"}),"\n",(0,s.jsx)(n.h3,{id:"\u57fa\u672c\u7c7b\u578b",children:"\u57fa\u672c\u7c7b\u578b"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Rust \u7c7b\u578b"}),(0,s.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"bool"})}),(0,s.jsx)(n.td,{children:"\u5e03\u5c14\u503c"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"i8"}),", ",(0,s.jsx)(n.code,{children:"i16"}),", ",(0,s.jsx)(n.code,{children:"i32"}),", ",(0,s.jsx)(n.code,{children:"i64"})]}),(0,s.jsx)(n.td,{children:"\u6709\u7b26\u53f7\u6574\u6570"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"f32"}),", ",(0,s.jsx)(n.code,{children:"f64"})]}),(0,s.jsx)(n.td,{children:"\u6d6e\u70b9\u6570"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"String"})}),(0,s.jsx)(n.td,{children:"UTF-8 \u5b57\u7b26\u4e32"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"\u96c6\u5408",children:"\u96c6\u5408"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Rust \u7c7b\u578b"}),(0,s.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Vec<T>"})}),(0,s.jsx)(n.td,{children:"\u52a8\u6001\u6570\u7ec4"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"VecDeque<T>"})}),(0,s.jsx)(n.td,{children:"\u53cc\u7aef\u961f\u5217"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"LinkedList<T>"})}),(0,s.jsx)(n.td,{children:"\u53cc\u5411\u94fe\u8868"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"HashMap<K, V>"})}),(0,s.jsx)(n.td,{children:"\u54c8\u5e0c\u6620\u5c04"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"BTreeMap<K, V>"})}),(0,s.jsx)(n.td,{children:"\u6709\u5e8f\u6620\u5c04"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"HashSet<T>"})}),(0,s.jsx)(n.td,{children:"\u54c8\u5e0c\u96c6\u5408"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"BTreeSet<T>"})}),(0,s.jsx)(n.td,{children:"\u6709\u5e8f\u96c6\u5408"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"BinaryHeap<T>"})}),(0,s.jsx)(n.td,{children:"\u4e8c\u53c9\u5806"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Option<T>"})}),(0,s.jsx)(n.td,{children:"\u53ef\u9009\u503c"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"\u667a\u80fd\u6307\u9488",children:"\u667a\u80fd\u6307\u9488"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Rust \u7c7b\u578b"}),(0,s.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Box<T>"})}),(0,s.jsx)(n.td,{children:"\u5806\u5206\u914d"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Rc<T>"})}),(0,s.jsx)(n.td,{children:"\u5f15\u7528\u8ba1\u6570\uff08\u8ffd\u8e2a\u5171\u4eab\u5f15\u7528\uff09"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Arc<T>"})}),(0,s.jsx)(n.td,{children:"\u7ebf\u7a0b\u5b89\u5168\u7684\u5f15\u7528\u8ba1\u6570\uff08\u8ffd\u8e2a\u5171\u4eab\u5f15\u7528\uff09"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RcWeak<T>"})}),(0,s.jsxs)(n.td,{children:["\u6307\u5411 ",(0,s.jsx)(n.code,{children:"Rc<T>"})," \u7684\u5f31\u5f15\u7528\uff08\u6253\u7834\u5faa\u73af\u5f15\u7528\uff09"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ArcWeak<T>"})}),(0,s.jsxs)(n.td,{children:["\u6307\u5411 ",(0,s.jsx)(n.code,{children:"Arc<T>"})," \u7684\u5f31\u5f15\u7528\uff08\u6253\u7834\u5faa\u73af\u5f15\u7528\uff09"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RefCell<T>"})}),(0,s.jsx)(n.td,{children:"\u5185\u90e8\u53ef\u53d8\u6027\uff08\u8fd0\u884c\u65f6\u501f\u7528\u68c0\u67e5\uff09"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Mutex<T>"})}),(0,s.jsx)(n.td,{children:"\u7ebf\u7a0b\u5b89\u5168\u7684\u5185\u90e8\u53ef\u53d8\u6027"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"\u65e5\u671f\u548c\u65f6\u95f4",children:"\u65e5\u671f\u548c\u65f6\u95f4"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Rust \u7c7b\u578b"}),(0,s.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"chrono::NaiveDate"})}),(0,s.jsx)(n.td,{children:"\u65e0\u65f6\u533a\u7684\u65e5\u671f"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"chrono::NaiveDateTime"})}),(0,s.jsx)(n.td,{children:"\u65e0\u65f6\u533a\u7684\u65f6\u95f4\u6233"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"\u81ea\u5b9a\u4e49\u7c7b\u578b",children:"\u81ea\u5b9a\u4e49\u7c7b\u578b"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"\u5b8f"}),(0,s.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"#[derive(ForyObject)]"})}),(0,s.jsx)(n.td,{children:"\u5bf9\u8c61\u56fe\u5e8f\u5217\u5316"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"#[derive(ForyRow)]"})}),(0,s.jsx)(n.td,{children:"\u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"-\u8de8\u8bed\u8a00\u5e8f\u5217\u5316",children:"\ud83c\udf0d \u8de8\u8bed\u8a00\u5e8f\u5217\u5316"}),"\n",(0,s.jsx)(n.p,{children:"Apache Fory\u2122 \u652f\u6301\u591a\u79cd\u8bed\u8a00\u4e4b\u95f4\u7684\u65e0\u7f1d\u6570\u636e\u4ea4\u6362\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'use fory::Fory;\n\n// \u542f\u7528\u8de8\u8bed\u8a00\u6a21\u5f0f\nlet mut fory = Fory::default()\n    .compatible(true)\n    .xlang(true);\n\n// \u4f7f\u7528\u8de8\u8bed\u8a00\u4e00\u81f4\u7684 ID \u6ce8\u518c\u7c7b\u578b\nfory.register::<MyStruct>(100);\n\n// \u6216\u4f7f\u7528\u57fa\u4e8e\u547d\u540d\u7a7a\u95f4\u7684\u6ce8\u518c\nfory.register_by_namespace::<MyStruct>("com.example", "MyStruct");\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\u53c2\u89c1 ",(0,s.jsx)(n.a,{href:"https://fory.apache.org/docs/specification/fory_xlang_serialization_spec",children:"xlang_type_mapping.md"})," \u4e86\u89e3\u8de8\u8bed\u8a00\u7684\u7c7b\u578b\u6620\u5c04\u3002"]}),"\n",(0,s.jsx)(n.h2,{id:"-\u6027\u80fd",children:"\u26a1 \u6027\u80fd"}),"\n",(0,s.jsx)(n.p,{children:"Apache Fory\u2122 Rust \u8bbe\u8ba1\u8ffd\u6c42\u6700\u5927\u6027\u80fd\uff1a"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u96f6\u62f7\u8d1d\u53cd\u5e8f\u5217\u5316"}),"\uff1a\u884c\u683c\u5f0f\u5b9e\u73b0\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\u800c\u65e0\u9700\u590d\u5236"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u7f13\u51b2\u533a\u9884\u5206\u914d"}),"\uff1a\u6700\u5c0f\u5316\u5e8f\u5217\u5316\u671f\u95f4\u7684\u5185\u5b58\u5206\u914d"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u7d27\u51d1\u7f16\u7801"}),"\uff1a\u53d8\u957f\u7f16\u7801\u4ee5\u5b9e\u73b0\u7a7a\u95f4\u6548\u7387"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u5c0f\u7aef\u5e8f"}),"\uff1a\u9488\u5bf9\u73b0\u4ee3 CPU \u67b6\u6784\u4f18\u5316"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u5f15\u7528\u53bb\u91cd"}),"\uff1a\u5171\u4eab\u5bf9\u8c61\u53ea\u5e8f\u5217\u5316\u4e00\u6b21"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u8fd0\u884c\u57fa\u51c6\u6d4b\u8bd5\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd rust\ncargo bench --package fory-benchmarks\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-\u6587\u6863",children:"\ud83d\udcd6 \u6587\u6863"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://docs.rs/fory",children:"API \u6587\u6863"})})," - \u5b8c\u6574\u7684 API \u53c2\u8003"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://fory.apache.org/docs/specification/fory_xlang_serialization_spec",children:"\u534f\u8bae\u89c4\u8303"})})," - \u5e8f\u5217\u5316\u534f\u8bae\u8be6\u60c5"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://fory.apache.org/docs/docs/guide/xlang_type_mapping",children:"\u7c7b\u578b\u6620\u5c04"})})," - \u8de8\u8bed\u8a00\u7c7b\u578b\u6620\u5c04"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-\u4f7f\u7528\u573a\u666f",children:"\ud83c\udfaf \u4f7f\u7528\u573a\u666f"}),"\n",(0,s.jsx)(n.h3,{id:"\u5bf9\u8c61\u5e8f\u5217\u5316",children:"\u5bf9\u8c61\u5e8f\u5217\u5316"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5177\u6709\u5d4c\u5957\u5bf9\u8c61\u548c\u5f15\u7528\u7684\u590d\u6742\u6570\u636e\u7ed3\u6784"}),"\n",(0,s.jsx)(n.li,{children:"\u5fae\u670d\u52a1\u4e2d\u7684\u8de8\u8bed\u8a00\u901a\u4fe1"}),"\n",(0,s.jsx)(n.li,{children:"\u5177\u6709\u5b8c\u5168\u7c7b\u578b\u5b89\u5168\u7684\u901a\u7528\u5e8f\u5217\u5316"}),"\n",(0,s.jsx)(n.li,{children:"\u517c\u5bb9\u6a21\u5f0f\u7684 schema \u6f14\u8fdb"}),"\n",(0,s.jsx)(n.li,{children:"\u5177\u6709\u5faa\u73af\u5f15\u7528\u7684\u56fe\u72b6\u6570\u636e\u7ed3\u6784"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316",children:"\u57fa\u4e8e\u884c\u7684\u5e8f\u5217\u5316"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u9ad8\u541e\u5410\u91cf\u6570\u636e\u5904\u7406"}),"\n",(0,s.jsx)(n.li,{children:"\u9700\u8981\u5feb\u901f\u5b57\u6bb5\u8bbf\u95ee\u7684\u5206\u6790\u5de5\u4f5c\u8d1f\u8f7d"}),"\n",(0,s.jsx)(n.li,{children:"\u5185\u5b58\u53d7\u9650\u73af\u5883"}),"\n",(0,s.jsx)(n.li,{children:"\u5b9e\u65f6\u6570\u636e\u6d41\u5e94\u7528"}),"\n",(0,s.jsx)(n.li,{children:"\u96f6\u62f7\u8d1d\u573a\u666f"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-\u67b6\u6784",children:"\ud83c\udfd7\ufe0f \u67b6\u6784"}),"\n",(0,s.jsx)(n.p,{children:"Rust \u5b9e\u73b0\u7531\u4e09\u4e2a\u4e3b\u8981 crate \u7ec4\u6210\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"fory/                   # \u9ad8\u7ea7 API\n\u251c\u2500\u2500 src/lib.rs         # \u516c\u5171 API \u5bfc\u51fa\n\nfory-core/             # \u6838\u5fc3\u5e8f\u5217\u5316\u5f15\u64ce\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 fory.rs       # \u4e3b\u5e8f\u5217\u5316\u5165\u53e3\n\u2502   \u251c\u2500\u2500 buffer.rs     # \u4e8c\u8fdb\u5236\u7f13\u51b2\u533a\u7ba1\u7406\n\u2502   \u251c\u2500\u2500 serializer/   # \u7279\u5b9a\u7c7b\u578b\u7684\u5e8f\u5217\u5316\u5668\n\u2502   \u251c\u2500\u2500 resolver/     # \u7c7b\u578b\u89e3\u6790\u548c\u5143\u6570\u636e\n\u2502   \u251c\u2500\u2500 meta/         # Meta \u5b57\u7b26\u4e32\u538b\u7f29\n\u2502   \u251c\u2500\u2500 row/          # \u884c\u683c\u5f0f\u5b9e\u73b0\n\u2502   \u2514\u2500\u2500 types.rs      # \u7c7b\u578b\u5b9a\u4e49\n\nfory-derive/           # \u8fc7\u7a0b\u5b8f\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 object/       # ForyObject \u5b8f\n\u2502   \u2514\u2500\u2500 fory_row.rs  # ForyRow \u5b8f\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-\u5e8f\u5217\u5316\u6a21\u5f0f",children:"\ud83d\udd04 \u5e8f\u5217\u5316\u6a21\u5f0f"}),"\n",(0,s.jsx)(n.p,{children:"Apache Fory\u2122 \u652f\u6301\u4e24\u79cd\u5e8f\u5217\u5316\u6a21\u5f0f\uff1a"}),"\n",(0,s.jsx)(n.h3,{id:"schemaconsistent-\u6a21\u5f0f\u9ed8\u8ba4",children:"SchemaConsistent \u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09"}),"\n",(0,s.jsx)(n.p,{children:"\u7c7b\u578b\u58f0\u660e\u5fc5\u987b\u5728\u5bf9\u7b49\u7aef\u4e4b\u95f4\u5b8c\u5168\u5339\u914d\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"let fory = Fory::default(); // \u9ed8\u8ba4\u4e3a SchemaConsistent\n"})}),"\n",(0,s.jsx)(n.h3,{id:"compatible-\u6a21\u5f0f",children:"Compatible \u6a21\u5f0f"}),"\n",(0,s.jsx)(n.p,{children:"\u5141\u8bb8\u72ec\u7acb\u7684 schema \u6f14\u8fdb\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"let fory = Fory::default().compatible(true);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-\u914d\u7f6e",children:"\u2699\ufe0f \u914d\u7f6e"}),"\n",(0,s.jsx)(n.h3,{id:"\u6700\u5927\u52a8\u6001\u5bf9\u8c61\u5d4c\u5957\u6df1\u5ea6",children:"\u6700\u5927\u52a8\u6001\u5bf9\u8c61\u5d4c\u5957\u6df1\u5ea6"}),"\n",(0,s.jsx)(n.p,{children:"Apache Fory\u2122 \u5728\u53cd\u5e8f\u5217\u5316\u671f\u95f4\u63d0\u4f9b\u4e86\u9488\u5bf9\u6df1\u5ea6\u5d4c\u5957\u52a8\u6001\u5bf9\u8c61\u5bfc\u81f4\u7684\u6808\u6ea2\u51fa\u7684\u4fdd\u62a4\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ctrait \u5bf9\u8c61\u548c\u5bb9\u5668\u7684\u6700\u5927\u5d4c\u5957\u6df1\u5ea6\u8bbe\u7f6e\u4e3a 5 \u5c42\u3002"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u9ed8\u8ba4\u914d\u7f6e\uff1a"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"let fory = Fory::default(); // max_dyn_depth = 5\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u81ea\u5b9a\u4e49\u6df1\u5ea6\u9650\u5236\uff1a"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"let fory = Fory::default().max_dyn_depth(10); // \u5141\u8bb8\u6700\u591a 10 \u5c42\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u4f55\u65f6\u8c03\u6574\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u589e\u52a0"}),"\uff1a\u7528\u4e8e\u5408\u6cd5\u7684\u6df1\u5ea6\u5d4c\u5957\u6570\u636e\u7ed3\u6784"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u51cf\u5c11"}),"\uff1a\u7528\u4e8e\u66f4\u4e25\u683c\u7684\u5b89\u5168\u8981\u6c42\u6216\u6d45\u5c42\u6570\u636e\u7ed3\u6784"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u53d7\u4fdd\u62a4\u7684\u7c7b\u578b\uff1a"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Box<dyn Any>"}),"\u3001",(0,s.jsx)(n.code,{children:"Rc<dyn Any>"}),"\u3001",(0,s.jsx)(n.code,{children:"Arc<dyn Any>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Box<dyn Trait>"}),"\u3001",(0,s.jsx)(n.code,{children:"Rc<dyn Trait>"}),"\u3001",(0,s.jsx)(n.code,{children:"Arc<dyn Trait>"}),"\uff08trait \u5bf9\u8c61\uff09"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RcWeak<T>"}),"\u3001",(0,s.jsx)(n.code,{children:"ArcWeak<T>"})]}),"\n",(0,s.jsx)(n.li,{children:"\u96c6\u5408\u7c7b\u578b\uff08Vec\u3001HashMap\u3001HashSet\uff09"}),"\n",(0,s.jsx)(n.li,{children:"\u517c\u5bb9\u6a21\u5f0f\u4e0b\u7684\u5d4c\u5957\u7ed3\u6784\u4f53\u7c7b\u578b"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u6ce8\u610f\uff1a\u9759\u6001\u6570\u636e\u7c7b\u578b\uff08\u975e\u52a8\u6001\u7c7b\u578b\uff09\u672c\u8d28\u4e0a\u662f\u5b89\u5168\u7684\uff0c\u4e0d\u53d7\u6df1\u5ea6\u9650\u5236\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u7ed3\u6784\u5728\u7f16\u8bd1\u65f6\u5df2\u77e5\u3002"}),"\n",(0,s.jsx)(n.h2,{id:"-\u6545\u969c\u6392\u9664",children:"\ud83e\uddea \u6545\u969c\u6392\u9664"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u7c7b\u578b\u6ce8\u518c\u8868\u9519\u8bef"}),"\uff1a\u50cf ",(0,s.jsx)(n.code,{children:"TypeId ... not found in type_info registry"})," \u8fd9\u6837\u7684\u9519\u8bef\u610f\u5473\u7740\u8be5\u7c7b\u578b\u4ece\u672a\u5728\u5f53\u524d\u7684 ",(0,s.jsx)(n.code,{children:"Fory"})," \u5b9e\u4f8b\u4e2d\u6ce8\u518c\u3002\u786e\u8ba4\u6bcf\u4e2a\u53ef\u5e8f\u5217\u5316\u7684\u7ed3\u6784\u4f53\u6216 trait \u5b9e\u73b0\u5728\u5e8f\u5217\u5316\u4e4b\u524d\u90fd\u8c03\u7528\u4e86 ",(0,s.jsx)(n.code,{children:"fory.register::<T>(type_id)"}),"\uff0c\u5e76\u4e14\u5728\u53cd\u5e8f\u5217\u5316\u7aef\u91cd\u7528\u76f8\u540c\u7684 ID\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u5feb\u901f\u9519\u8bef\u67e5\u627e"}),"\uff1a\u4f18\u5148\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"fory_core::error::Error"})," \u4e0a\u7684\u9759\u6001\u6784\u9020\u51fd\u6570\uff08",(0,s.jsx)(n.code,{children:"Error::type_mismatch"}),"\u3001",(0,s.jsx)(n.code,{children:"Error::invalid_data"}),"\u3001",(0,s.jsx)(n.code,{children:"Error::unknown"})," \u7b49\uff09\u800c\u4e0d\u662f\u624b\u52a8\u5b9e\u4f8b\u5316\u53d8\u4f53\u3002\u8fd9\u4f7f\u8bca\u65ad\u4fdd\u6301\u4e00\u81f4\uff0c\u5e76\u4f7f\u53ef\u9009\u7684 panic \u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u9519\u8bef\u65f6 Panic \u4ee5\u83b7\u53d6\u56de\u6eaf"}),"\uff1a\u5728\u8fd0\u884c\u6d4b\u8bd5\u6216\u4e8c\u8fdb\u5236\u6587\u4ef6\u65f6\uff0c\u5c06 ",(0,s.jsx)(n.code,{children:"FORY_PANIC_ON_ERROR=1"}),"\uff08\u6216 ",(0,s.jsx)(n.code,{children:"true"}),"\uff09\u4e0e ",(0,s.jsx)(n.code,{children:"RUST_BACKTRACE=1"})," \u4e00\u8d77\u5207\u6362\uff0c\u4ee5\u5728\u6784\u9020\u9519\u8bef\u7684\u786e\u5207\u4f4d\u7f6e panic\u3002\u4e4b\u540e\u91cd\u7f6e\u8be5\u53d8\u91cf\u4ee5\u907f\u514d\u4e2d\u6b62\u9762\u5411\u7528\u6237\u7684\u4ee3\u7801\u8def\u5f84\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u7ed3\u6784\u4f53\u5b57\u6bb5\u8ddf\u8e2a"}),"\uff1a\u5728 ",(0,s.jsx)(n.code,{children:"#[derive(ForyObject)]"})," \u65c1\u8fb9\u6dfb\u52a0 ",(0,s.jsx)(n.code,{children:"#[fory_debug]"})," \u5c5e\u6027\uff0c\u544a\u8bc9\u5b8f\u4e3a\u8be5\u7c7b\u578b\u53d1\u51fa\u94a9\u5b50\u8c03\u7528\u3002\u4e00\u65e6\u4f7f\u7528\u8c03\u8bd5\u94a9\u5b50\u7f16\u8bd1\uff0c\u8c03\u7528 ",(0,s.jsx)(n.code,{children:"set_before_write_field_func"}),"\u3001",(0,s.jsx)(n.code,{children:"set_after_write_field_func"}),"\u3001",(0,s.jsx)(n.code,{children:"set_before_read_field_func"})," \u6216 ",(0,s.jsx)(n.code,{children:"set_after_read_field_func"}),"\uff08\u6765\u81ea ",(0,s.jsx)(n.code,{children:"fory-core/src/serializer/struct_.rs"}),"\uff09\u6765\u63d2\u5165\u81ea\u5b9a\u4e49\u56de\u8c03\uff0c\u5e76\u5728\u9700\u8981\u6062\u590d\u9ed8\u8ba4\u503c\u65f6\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"reset_struct_debug_hooks()"}),"\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u8f7b\u91cf\u7ea7\u65e5\u5fd7"}),"\uff1a\u5728\u6ca1\u6709\u81ea\u5b9a\u4e49\u94a9\u5b50\u7684\u60c5\u51b5\u4e0b\uff0c\u542f\u7528 ",(0,s.jsx)(n.code,{children:"ENABLE_FORY_DEBUG_OUTPUT=1"})," \u6765\u6253\u5370\u7531\u9ed8\u8ba4\u94a9\u5b50\u51fd\u6570\u53d1\u51fa\u7684\u5b57\u6bb5\u7ea7\u8bfb/\u5199\u4e8b\u4ef6\u3002\u8fd9\u5728\u8c03\u67e5\u5bf9\u9f50\u6216\u6e38\u6807\u4e0d\u5339\u914d\u65f6\u7279\u522b\u6709\u7528\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u6d4b\u8bd5\u65f6\u7684\u89c4\u8303"}),"\uff1a\u4e00\u4e9b\u96c6\u6210\u6d4b\u8bd5\u671f\u671b ",(0,s.jsx)(n.code,{children:"FORY_PANIC_ON_ERROR"})," \u4fdd\u6301\u672a\u8bbe\u7f6e\u3002\u4ec5\u5728\u96c6\u4e2d\u8c03\u8bd5\u4f1a\u8bdd\u65f6\u5bfc\u51fa\u5b83\uff0c\u5e76\u5728\u9694\u79bb\u5931\u8d25\u573a\u666f\u65f6\u4f18\u5148\u4f7f\u7528 ",(0,s.jsx)(n.code,{children:"cargo test --features tests -p tests --test <case>"}),"\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-\u5f00\u53d1",children:"\ud83d\udee0\ufe0f \u5f00\u53d1"}),"\n",(0,s.jsx)(n.h3,{id:"\u6784\u5efa",children:"\u6784\u5efa"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd rust\ncargo build\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u6d4b\u8bd5",children:"\u6d4b\u8bd5"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\ncargo test --features tests\n\n# \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5\ncargo test -p tests --test test_complex_struct\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u4ee3\u7801\u8d28\u91cf",children:"\u4ee3\u7801\u8d28\u91cf"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \u683c\u5f0f\u5316\u4ee3\u7801\ncargo fmt\n\n# \u68c0\u67e5\u683c\u5f0f\ncargo fmt --check\n\n# \u8fd0\u884c linter\ncargo clippy --all-targets --all-features -- -D warnings\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-\u8def\u7ebf\u56fe",children:"\ud83d\uddfa\ufe0f \u8def\u7ebf\u56fe"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u57fa\u4e8e rust macro \u7684\u9759\u6001\u4ee3\u7801\u751f\u6210"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u884c\u683c\u5f0f\u5e8f\u5217\u5316"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u8de8\u8bed\u8a00\u5bf9\u8c61\u56fe\u5e8f\u5217\u5316"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u5171\u4eab\u548c\u5faa\u73af\u5f15\u7528\u8ffd\u8e2a"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u5f31\u6307\u9488\u652f\u6301"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u5177\u6709\u591a\u6001\u6027\u7684 trait \u5bf9\u8c61\u5e8f\u5217\u5316"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u517c\u5bb9\u6a21\u5f0f\u4e0b\u7684 schema \u6f14\u8fdb"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ","\u5b57\u7b26\u4e32\u7f16\u7801\u7684 SIMD \u4f18\u5316"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u5171\u4eab\u548c\u5faa\u73af\u5f15\u7528\u8ffd\u8e2a\u7684\u8de8\u8bed\u8a00\u652f\u6301"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Trait \u5bf9\u8c61\u7684\u8de8\u8bed\u8a00\u652f\u6301"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u6027\u80fd\u4f18\u5316"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","\u66f4\u5168\u9762\u7684\u57fa\u51c6\u6d4b\u8bd5"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-\u8bb8\u53ef\u8bc1",children:"\ud83d\udcc4 \u8bb8\u53ef\u8bc1"}),"\n",(0,s.jsxs)(n.p,{children:["\u6839\u636e Apache License 2.0 \u6388\u6743\u3002\u8be6\u60c5\u8bf7\u53c2\u89c1 ",(0,s.jsx)(n.a,{href:"https://github.com/apache/fory/blob/main/LICENSE",children:"LICENSE"}),"\u3002"]}),"\n",(0,s.jsx)(n.h2,{id:"-\u8d21\u732e",children:"\ud83e\udd1d \u8d21\u732e"}),"\n",(0,s.jsxs)(n.p,{children:["\u6211\u4eec\u6b22\u8fce\u8d21\u732e\uff01\u8be6\u60c5\u8bf7\u53c2\u89c1\u6211\u4eec\u7684",(0,s.jsx)(n.a,{href:"https://github.com/apache/fory/blob/main/CONTRIBUTING.md",children:"\u8d21\u732e\u6307\u5357"}),"\u3002"]}),"\n",(0,s.jsx)(n.h2,{id:"-\u652f\u6301",children:"\ud83d\udcde \u652f\u6301"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u6587\u6863"}),"\uff1a",(0,s.jsx)(n.a,{href:"https://docs.rs/fory",children:"docs.rs/fory"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u95ee\u9898"}),"\uff1a",(0,s.jsx)(n.a,{href:"https://github.com/apache/fory/issues",children:"GitHub Issues"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"\u8ba8\u8bba"}),"\uff1a",(0,s.jsx)(n.a,{href:"https://github.com/apache/fory/discussions",children:"GitHub Discussions"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Slack"}),"\uff1a",(0,s.jsx)(n.a,{href:"https://join.slack.com/t/fory-project/shared_invite/zt-1u8soj4qc-ieYEu7ciHOqA2mo47llS8A",children:"Apache Fory Slack"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Apache Fory\u2122"})," - \u6781\u901f\u7684\u591a\u8bed\u8a00\u5e8f\u5217\u5316\u6846\u67b6\u3002"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>l});var s=r(67294);const i={},d=s.createContext(i);function l(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);