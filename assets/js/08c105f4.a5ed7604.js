"use strict";(self.webpackChunkfory_site=self.webpackChunkfory_site||[]).push([[8767],{24147:(e,h,t)=>{t.r(h),t.d(h,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>n});var i=t(85893),a=t(11151);const r={slug:"fory_0_13_0_release",title:"Fory v0.13.0 Released",authors:["chaokunyang"],tags:["fory"]},l=void 0,s={permalink:"/blog/fory_0_13_0_release",editUrl:"https://github.com/apache/fory-site/tree/main/blog/2025-10-27-fory_0_13_0_release.md",source:"@site/blog/2025-10-27-fory_0_13_0_release.md",title:"Fory v0.13.0 Released",description:"The Apache Fory team is pleased to announce the 0.13.0 release. This is a major release that includes 217 PR from 19 distinct contributors. See the Install Page to learn how to get the libraries for your platform.",date:"2025-10-27T00:00:00.000Z",formattedDate:"October 27, 2025",tags:[{label:"fory",permalink:"/blog/tags/fory"}],readingTime:17.63,hasTruncateMarker:!1,authors:[{name:"Shawn Yang",title:"Apache Fory PMC Chair",url:"https://github.com/chaokunyang",imageURL:"/img/authors/chaokunyang.png",key:"chaokunyang"}],frontMatter:{slug:"fory_0_13_0_release",title:"Fory v0.13.0 Released",authors:["chaokunyang"],tags:["fory"]},unlisted:!1,prevItem:{title:"Introducing Apache Fory\u2122 Rust: A Versatile Serialization Framework for the Modern Age",permalink:"/blog/2025/10/29/fory_rust_versatile_serialization_framework"},nextItem:{title:"Fory v0.12.3 Released",permalink:"/blog/fory_0_12_3_release"}},c={authorsImageUrls:[void 0]},n=[{value:"Highlights",id:"highlights",level:2},{value:"Rust: First Release Highlights",id:"rust-first-release-highlights",level:2},{value:"Quick start (minimal example):",id:"quick-start-minimal-example",level:3},{value:"Rust Benchmarks",id:"rust-benchmarks",level:3},{value:"Python: Drop\u2011in Replacement for pickle",id:"python-dropin-replacement-for-pickle",level:2},{value:"Features",id:"features",level:2},{value:"Bug Fix",id:"bug-fix",level:2},{value:"Other Improvements",id:"other-improvements",level:2},{value:"New Contributors",id:"new-contributors",level:2}];function o(e){const h={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(h.p,{children:["The Apache Fory team is pleased to announce the 0.13.0 release. This is a major release that includes ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/compare/v0.12.3...v0.13.0",children:"217 PR"})," from 19 distinct contributors. See the ",(0,i.jsx)(h.a,{href:"https://fury.apache.org/docs/docs/start/install",children:"Install"})," Page to learn how to get the libraries for your platform."]}),"\n",(0,i.jsx)(h.h2,{id:"highlights",children:"Highlights"}),"\n",(0,i.jsxs)(h.ul,{children:["\n",(0,i.jsx)(h.li,{children:"Dynamic Trait Object Serialization for Rust"}),"\n",(0,i.jsx)(h.li,{children:"Shared/Circular ownership serialization for Rust"}),"\n",(0,i.jsx)(h.li,{children:"Schema Forward/Backward compatibilify for Rust"}),"\n",(0,i.jsxs)(h.li,{children:["Drop-in Replacement for Python pickle: support local function/classes/",(0,i.jsx)(h.code,{children:"__reduce__"}),"/",(0,i.jsx)(h.code,{children:"__getstate__"})," serialization"]}),"\n",(0,i.jsx)(h.li,{children:"Schema Forward/Backward compatibilify for Python dataclass"}),"\n",(0,i.jsx)(h.li,{children:"Support codegen for xlang mode in java"}),"\n",(0,i.jsx)(h.li,{children:"Primitive array compression using SIMD"}),"\n",(0,i.jsx)(h.li,{children:"Compact Row Codec for Row Format"}),"\n",(0,i.jsx)(h.li,{children:"Schema Forward/Backward compatibilify for Go"}),"\n",(0,i.jsx)(h.li,{children:"Ahead-of-time codegen for golang struct serialization"}),"\n"]}),"\n",(0,i.jsx)(h.h2,{id:"rust-first-release-highlights",children:"Rust: First Release Highlights"}),"\n",(0,i.jsx)(h.p,{children:"This is the first Apache Fory Rust release, delivering a complete, high\u2011performance serialization stack. If you build Rust services or libraries, you can now use Fory natively with strong typing, performance, and schema evolution."}),"\n",(0,i.jsxs)(h.ul,{children:["\n",(0,i.jsxs)(h.li,{children:["Derive-based object graph serialization via ",(0,i.jsx)(h.code,{children:"#[derive(ForyObject)]"})]}),"\n",(0,i.jsxs)(h.li,{children:["Polymorphism for trait objects: ",(0,i.jsx)(h.code,{children:"Box<dyn Trait>"}),", ",(0,i.jsx)(h.code,{children:"Rc<dyn Trait>"}),", ",(0,i.jsx)(h.code,{children:"Arc<dyn Trait>"}),", plus ",(0,i.jsx)(h.code,{children:"dyn Any"})]}),"\n",(0,i.jsxs)(h.li,{children:["Shared and circular reference tracking: ",(0,i.jsx)(h.code,{children:"Rc"}),"/",(0,i.jsx)(h.code,{children:"Arc"})," and ",(0,i.jsx)(h.code,{children:"RcWeak"}),"/",(0,i.jsx)(h.code,{children:"ArcWeak"})]}),"\n",(0,i.jsx)(h.li,{children:"Forward/backward compatible schema evolution (Compatible mode)"}),"\n",(0,i.jsxs)(h.li,{children:["Zero-copy Row format via ",(0,i.jsx)(h.code,{children:"#[derive(ForyRow)]"})," with selective field access"]}),"\n",(0,i.jsx)(h.li,{children:"Thread-safe and multi-thread capable serialization (context pool)"}),"\n",(0,i.jsxs)(h.li,{children:["Broad collection support (e.g., ",(0,i.jsx)(h.code,{children:"VecDeque"}),", ",(0,i.jsx)(h.code,{children:"LinkedList"}),", ",(0,i.jsx)(h.code,{children:"BTreeMap"}),", ",(0,i.jsx)(h.code,{children:"BTreeSet"}),", ",(0,i.jsx)(h.code,{children:"BinaryHeap"}),")"]}),"\n"]}),"\n",(0,i.jsx)(h.h3,{id:"quick-start-minimal-example",children:"Quick start (minimal example):"}),"\n",(0,i.jsx)(h.pre,{children:(0,i.jsx)(h.code,{className:"language-rust",children:'use fory::{Fory, Error};\nuse fory::ForyObject;\n\n#[derive(ForyObject, Debug, PartialEq)]\nstruct User {\n\tname: String,\n\tage: i32,\n\temail: String,\n}\n\nfn main() -> Result<(), Error> {\n\tlet mut fory = Fory::default();\n\tfory.register::<User>(1)?;\n\n\tlet user = User { name: "Alice".into(), age: 30, email: "alice@example.com".into() };\n\tlet bytes = fory.serialize(&user)?;\n\tlet decoded: User = fory.deserialize(&bytes)?;\n\tassert_eq!(user, decoded);\n\tOk(())\n}\n'})}),"\n",(0,i.jsxs)(h.ul,{children:["\n",(0,i.jsxs)(h.li,{children:["Guide: Rust Serialization \u2013 ",(0,i.jsx)(h.a,{href:"https://fory.apache.org/docs/docs/guide/rust_serialization",children:"https://fory.apache.org/docs/docs/guide/rust_serialization"})]}),"\n",(0,i.jsxs)(h.li,{children:["Crate: fory on crates.io \u2013 ",(0,i.jsx)(h.a,{href:"https://crates.io/crates/fory",children:"https://crates.io/crates/fory"})]}),"\n",(0,i.jsxs)(h.li,{children:["API docs: docs.rs \u2013 ",(0,i.jsx)(h.a,{href:"https://docs.rs/fory/latest/fory",children:"https://docs.rs/fory/latest/fory"})]}),"\n"]}),"\n",(0,i.jsx)(h.h3,{id:"rust-benchmarks",children:"Rust Benchmarks"}),"\n",(0,i.jsx)("img",{src:"/img/benchmarks/rust/ecommerce_data.png",width:"90%"}),"\n",(0,i.jsx)("img",{src:"/img/benchmarks/rust/system_data.png",width:"90%"}),"\n",(0,i.jsx)(h.p,{children:"Below are serialize throughput results (TPS; higher is better) comparing Fory with JSON and Protobuf across multiple datasets and sizes."}),"\n",(0,i.jsxs)(h.table,{children:[(0,i.jsx)(h.thead,{children:(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.th,{children:"Datatype"}),(0,i.jsx)(h.th,{children:"Size"}),(0,i.jsx)(h.th,{children:"Operation"}),(0,i.jsx)(h.th,{children:"Fory TPS"}),(0,i.jsx)(h.th,{children:"JSON TPS"}),(0,i.jsx)(h.th,{children:"Protobuf TPS"}),(0,i.jsx)(h.th,{children:"Fastest"})]})}),(0,i.jsxs)(h.tbody,{children:[(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"company"}),(0,i.jsx)(h.td,{children:"small"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"10,063,906"}),(0,i.jsx)(h.td,{children:"761,673"}),(0,i.jsx)(h.td,{children:"896,620"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"company"}),(0,i.jsx)(h.td,{children:"medium"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"412,507"}),(0,i.jsx)(h.td,{children:"33,835"}),(0,i.jsx)(h.td,{children:"37,590"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"company"}),(0,i.jsx)(h.td,{children:"large"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"9,183"}),(0,i.jsx)(h.td,{children:"793"}),(0,i.jsx)(h.td,{children:"880"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"ecommerce_data"}),(0,i.jsx)(h.td,{children:"small"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"2,350,729"}),(0,i.jsx)(h.td,{children:"206,262"}),(0,i.jsx)(h.td,{children:"256,970"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"ecommerce_data"}),(0,i.jsx)(h.td,{children:"medium"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"59,977"}),(0,i.jsx)(h.td,{children:"4,699"}),(0,i.jsx)(h.td,{children:"5,242"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"ecommerce_data"}),(0,i.jsx)(h.td,{children:"large"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"3,727"}),(0,i.jsx)(h.td,{children:"266"}),(0,i.jsx)(h.td,{children:"295"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"person"}),(0,i.jsx)(h.td,{children:"small"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"13,632,522"}),(0,i.jsx)(h.td,{children:"1,345,189"}),(0,i.jsx)(h.td,{children:"1,475,035"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"person"}),(0,i.jsx)(h.td,{children:"medium"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"3,839,656"}),(0,i.jsx)(h.td,{children:"337,610"}),(0,i.jsx)(h.td,{children:"369,031"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"person"}),(0,i.jsx)(h.td,{children:"large"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"907,853"}),(0,i.jsx)(h.td,{children:"79,631"}),(0,i.jsx)(h.td,{children:"91,408"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_list"}),(0,i.jsx)(h.td,{children:"small"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"27,726,945"}),(0,i.jsx)(h.td,{children:"4,874,957"}),(0,i.jsx)(h.td,{children:"4,643,172"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_list"}),(0,i.jsx)(h.td,{children:"medium"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"4,770,765"}),(0,i.jsx)(h.td,{children:"401,558"}),(0,i.jsx)(h.td,{children:"397,551"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_list"}),(0,i.jsx)(h.td,{children:"large"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"606,061"}),(0,i.jsx)(h.td,{children:"41,061"}),(0,i.jsx)(h.td,{children:"44,565"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_map"}),(0,i.jsx)(h.td,{children:"small"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"22,862,369"}),(0,i.jsx)(h.td,{children:"3,888,025"}),(0,i.jsx)(h.td,{children:"2,695,999"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_map"}),(0,i.jsx)(h.td,{children:"medium"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"2,128,973"}),(0,i.jsx)(h.td,{children:"204,319"}),(0,i.jsx)(h.td,{children:"193,132"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_map"}),(0,i.jsx)(h.td,{children:"large"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"177,847"}),(0,i.jsx)(h.td,{children:"18,419"}),(0,i.jsx)(h.td,{children:"18,668"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_struct"}),(0,i.jsx)(h.td,{children:"small"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"35,729,598"}),(0,i.jsx)(h.td,{children:"10,167,045"}),(0,i.jsx)(h.td,{children:"8,633,342"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_struct"}),(0,i.jsx)(h.td,{children:"medium"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"34,988,279"}),(0,i.jsx)(h.td,{children:"9,737,098"}),(0,i.jsx)(h.td,{children:"6,433,350"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"simple_struct"}),(0,i.jsx)(h.td,{children:"large"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"31,801,558"}),(0,i.jsx)(h.td,{children:"4,545,041"}),(0,i.jsx)(h.td,{children:"7,420,049"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"system_data"}),(0,i.jsx)(h.td,{children:"small"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"5,382,131"}),(0,i.jsx)(h.td,{children:"468,033"}),(0,i.jsx)(h.td,{children:"569,930"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"system_data"}),(0,i.jsx)(h.td,{children:"medium"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"174,240"}),(0,i.jsx)(h.td,{children:"11,896"}),(0,i.jsx)(h.td,{children:"14,753"}),(0,i.jsx)(h.td,{children:"fory"})]}),(0,i.jsxs)(h.tr,{children:[(0,i.jsx)(h.td,{children:"system_data"}),(0,i.jsx)(h.td,{children:"large"}),(0,i.jsx)(h.td,{children:"serialize"}),(0,i.jsx)(h.td,{children:"10,671"}),(0,i.jsx)(h.td,{children:"876"}),(0,i.jsx)(h.td,{children:"1,040"}),(0,i.jsx)(h.td,{children:"fory"})]})]})]}),"\n",(0,i.jsxs)(h.p,{children:["Note: Results depend on hardware, dataset, and implementation versions. See the Rust guide for how to run benchmarks yourself: ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/blob/main/rust/benches/README.md",children:"https://github.com/apache/fory/blob/main/rust/benches/README.md"})]}),"\n",(0,i.jsx)(h.h2,{id:"python-dropin-replacement-for-pickle",children:"Python: Drop\u2011in Replacement for pickle"}),"\n",(0,i.jsxs)(h.p,{children:[(0,i.jsx)(h.code,{children:"pyfory"})," now acts as a high\u2011performance drop\u2011in replacement for ",(0,i.jsx)(h.code,{children:"pickle"}),"/",(0,i.jsx)(h.code,{children:"cloudpickle"}),", while keeping the same simple API and adding security and performance features."]}),"\n",(0,i.jsxs)(h.ul,{children:["\n",(0,i.jsxs)(h.li,{children:["Serialize any Python object in Python\u2011native mode (",(0,i.jsx)(h.code,{children:"xlang=False"}),"): global/local functions, lambdas, global/local classes, instance/class/static methods"]}),"\n",(0,i.jsxs)(h.li,{children:["Honors Python hooks: ",(0,i.jsx)(h.code,{children:"__getstate__"}),", ",(0,i.jsx)(h.code,{children:"__setstate__"}),", ",(0,i.jsx)(h.code,{children:"__reduce__"}),", ",(0,i.jsx)(h.code,{children:"__reduce_ex__"})]}),"\n",(0,i.jsxs)(h.li,{children:["Reference tracking for shared/circular graphs with ",(0,i.jsx)(h.code,{children:"ref=True"})]}),"\n",(0,i.jsxs)(h.li,{children:["Pickle protocol 5 out\u2011of\u2011band buffers for zero\u2011copy via ",(0,i.jsx)(h.code,{children:"pickle.PickleBuffer"})," (NumPy, Pandas, etc.)"]}),"\n",(0,i.jsxs)(h.li,{children:["Security: ",(0,i.jsx)(h.code,{children:"strict=True"})," for registration\u2011based safety and ",(0,i.jsx)(h.code,{children:"DeserializationPolicy"})," for fine\u2011grained control"]}),"\n",(0,i.jsxs)(h.li,{children:["Threading: ",(0,i.jsx)(h.code,{children:"ThreadSafeFory"})," for safe multi\u2011thread use"]}),"\n",(0,i.jsxs)(h.li,{children:["Familiar API: ",(0,i.jsx)(h.code,{children:"dumps/loads"})," are aliases of ",(0,i.jsx)(h.code,{children:"serialize/deserialize"})]}),"\n"]}),"\n",(0,i.jsx)(h.p,{children:"Quick start:"}),"\n",(0,i.jsx)(h.pre,{children:(0,i.jsx)(h.code,{className:"language-python",children:"import pyfory\n\n# Drop-in replacement for pickle/cloudpickle\nfory = pyfory.Fory(xlang=False, ref=True, strict=False)\n\ndef make_multiplier(k):\n\tdef mul(x):\n\t\treturn k * x\n\treturn mul\n\nbinary = fory.dumps(make_multiplier(10))\nassert fory.loads(binary)(3) == 30\n"})}),"\n",(0,i.jsxs)(h.p,{children:["Read more: Python Guide \u2013 ",(0,i.jsx)(h.a,{href:"https://fory.apache.org/docs/latest/python_serialization/",children:"https://fory.apache.org/docs/latest/python_serialization/"})]}),"\n",(0,i.jsx)(h.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(h.ul,{children:["\n",(0,i.jsxs)(h.li,{children:["feat(java): support object stream serialization for graalvm by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2464",children:"https://github.com/apache/fory/pull/2464"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(java): rename abstract collection/map serializers to Map/ListLikeSerializer by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2466",children:"https://github.com/apache/fory/pull/2466"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(memory): add customizable MemoryAllocator interface by @adriacabeza in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2467",children:"https://github.com/apache/fory/pull/2467"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat: Chain wheel test/build and release workflows by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2483",children:"https://github.com/apache/fory/pull/2483"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): set default languge to python for pyfory by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2490",children:"https://github.com/apache/fory/pull/2490"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): add register api to python by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2491",children:"https://github.com/apache/fory/pull/2491"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): meta compression for python by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2504",children:"https://github.com/apache/fory/pull/2504"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): type meta encoding for python by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2509",children:"https://github.com/apache/fory/pull/2509"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(CI): Cache npm, add node 24, lock file by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2523",children:"https://github.com/apache/fory/pull/2523"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): Implementing Type Compatible by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2492",children:"https://github.com/apache/fory/pull/2492"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): support Option in MetaFieldType se/de by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2528",children:"https://github.com/apache/fory/pull/2528"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support skipping fields bytes when deserializing in compatible mode by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2545",children:"https://github.com/apache/fory/pull/2545"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(go): add type meta encoding for meta share by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2554",children:"https://github.com/apache/fory/pull/2554"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): Support automatic conversion between T and ",(0,i.jsx)(h.code,{children:"Option<T>"})," when deserialize by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2563",children:"https://github.com/apache/fory/pull/2563"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): bean encoder implemented interfaces honor ",(0,i.jsx)(h.code,{children:"@Ignore"})," by @stevenschlansker in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2576",children:"https://github.com/apache/fory/pull/2576"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(java): refactor fory java exception hierarchical structure by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2577",children:"https://github.com/apache/fory/pull/2577"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Go): Implement ahead of time codegen for fory-go serialization by @ThisingL in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2553",children:"https://github.com/apache/fory/pull/2553"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): support limit deserialization depth by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2578",children:"https://github.com/apache/fory/pull/2578"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): add fory rust benchmark by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2583",children:"https://github.com/apache/fory/pull/2583"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(rust): optimize rust deserialize perf by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2584",children:"https://github.com/apache/fory/pull/2584"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): add rust profiler for serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2588",children:"https://github.com/apache/fory/pull/2588"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(go): rename FieldInfo to FieldDef to avoide name collision by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2594",children:"https://github.com/apache/fory/pull/2594"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): meta share mode for pyfory compatible serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2593",children:"https://github.com/apache/fory/pull/2593"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java/python): align java and python compatible mode serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2602",children:"https://github.com/apache/fory/pull/2602"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java/python): support enum xlang serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2603",children:"https://github.com/apache/fory/pull/2603"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): support basic type se/de aligned with java by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2585",children:"https://github.com/apache/fory/pull/2585"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(python/java): Fix & optimize cross-language meta-share mode by @pandalee99 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2601",children:"https://github.com/apache/fory/pull/2601"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(go): align cross-language type serialization for primitive arrays by @pandalee99 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2610",children:"https://github.com/apache/fory/pull/2610"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): support codegen for xlang mode in java by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2613",children:"https://github.com/apache/fory/pull/2613"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): primitive array compression using SIMD by @adriacabeza in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2485",children:"https://github.com/apache/fory/pull/2485"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(go): Replace globalTypeResolver with factory-based serializer registration by @ThisingL in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2615",children:"https://github.com/apache/fory/pull/2615"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(go): Implement compatible mode with metashare mode by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2607",children:"https://github.com/apache/fory/pull/2607"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): support concurent map serialization when being updated by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2617",children:"https://github.com/apache/fory/pull/2617"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): support concurrent updates when serializing collections by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2623",children:"https://github.com/apache/fory/pull/2623"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): support limit pyfory depth by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2625",children:"https://github.com/apache/fory/pull/2625"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): sort fields && feat Enum && fix read/write type_info && fix type_meta en/decode by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2630",children:"https://github.com/apache/fory/pull/2630"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): drop-in replacement for pickle serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2629",children:"https://github.com/apache/fory/pull/2629"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(java): refactor type resolver by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2640",children:"https://github.com/apache/fory/pull/2640"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): support type converters for comaptible mode by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2641",children:"https://github.com/apache/fory/pull/2641"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(java/python): refine collection header bitmap by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2642",children:"https://github.com/apache/fory/pull/2642"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(go): metashare mode support collection and map and nested object by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2643",children:"https://github.com/apache/fory/pull/2643"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(go): Add slice and map support to fory-go codegen serialization by @ThisingL in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2638",children:"https://github.com/apache/fory/pull/2638"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(go): Change codegen annotation from //fory",":gen"," to //fory",":generate"," by @ThisingL in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2648",children:"https://github.com/apache/fory/pull/2648"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support Map and register_by_name by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2649",children:"https://github.com/apache/fory/pull/2649"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): support graalvm 25 by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2652",children:"https://github.com/apache/fory/pull/2652"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): support deserialize not registered/exsited class/fields for xlang compatible mode by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2655",children:"https://github.com/apache/fory/pull/2655"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(Rust): Refactor compile-time code & fix named_enum & fix skip enum by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2657",children:"https://github.com/apache/fory/pull/2657"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): support local py class serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2665",children:"https://github.com/apache/fory/pull/2665"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(go): refine collection header bitmap by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2656",children:"https://github.com/apache/fory/pull/2656"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): support class methods serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2670",children:"https://github.com/apache/fory/pull/2670"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(go): refine collection header bitmap in codegen by @ThisingL in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2676",children:"https://github.com/apache/fory/pull/2676"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support box serde for rust by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2677",children:"https://github.com/apache/fory/pull/2677"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support reference tracking for rust Rc/Arc by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2678",children:"https://github.com/apache/fory/pull/2678"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): refine python serialization api by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2673",children:"https://github.com/apache/fory/pull/2673"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(Rust): Refine api name by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2671",children:"https://github.com/apache/fory/pull/2671"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support rust dyn trait object serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2691",children:"https://github.com/apache/fory/pull/2691"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support dyn any trait object serialization for box/arc/rc by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2704",children:"https://github.com/apache/fory/pull/2704"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support shared reference tracking for ",(0,i.jsx)(h.code,{children:"arc/rc<dyn T>"})," by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2707",children:"https://github.com/apache/fory/pull/2707"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): avoid downcast method of multiple trait objects in same module conflict by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2708",children:"https://github.com/apache/fory/pull/2708"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): add deref to arc/rc wrapper by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2709",children:"https://github.com/apache/fory/pull/2709"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(rust): unify rc/arc wrapper macro arms into one function by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2711",children:"https://github.com/apache/fory/pull/2711"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(Rust): Use SIMD to se/de string by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2716",children:"https://github.com/apache/fory/pull/2716"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): named_xx se/de && ext se/de && add unittest by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2712",children:"https://github.com/apache/fory/pull/2712"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support RcWeak/ArcWeak for circular reference tracking by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2714",children:"https://github.com/apache/fory/pull/2714"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support limit max dyn depth by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2730",children:"https://github.com/apache/fory/pull/2730"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): Unroll fields loop & Add a feature for this by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2724",children:"https://github.com/apache/fory/pull/2724"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): make fory out-of-band serialization compatible with pickle5 by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2732",children:"https://github.com/apache/fory/pull/2732"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(go): Replace legacy RegisterTagType api call by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2696",children:"https://github.com/apache/fory/pull/2696"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): add thread safe fory by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2735",children:"https://github.com/apache/fory/pull/2735"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support VecDeque/LinkedList serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2741",children:"https://github.com/apache/fory/pull/2741"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support btreemap serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2743",children:"https://github.com/apache/fory/pull/2743"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support btree set and binary heap serialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2744",children:"https://github.com/apache/fory/pull/2744"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): support context_pool to reduce context allocation && support se/de in multi-thread by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2737",children:"https://github.com/apache/fory/pull/2737"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(ci): cache Bazel binary in Python CI workflow by @SanyamSuyal in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2745",children:"https://github.com/apache/fory/pull/2745"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): rewrite fory derive macro for smaller and faster generated code using compile-time fields sort algorithm by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2749",children:"https://github.com/apache/fory/pull/2749"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(ci): add maven cache to ci for faster build by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2751",children:"https://github.com/apache/fory/pull/2751"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): fast fory_read_compatible macro to use match by assigned field id by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2758",children:"https://github.com/apache/fory/pull/2758"})]}),"\n",(0,i.jsxs)(h.li,{children:["refactor(rust): use compatible bool instead of enum to simplify API by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2763",children:"https://github.com/apache/fory/pull/2763"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): query type meta from parsed cache to speed up deserialization by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2764",children:"https://github.com/apache/fory/pull/2764"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): introduce Compact Row Codec by @stevenschlansker in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2414",children:"https://github.com/apache/fory/pull/2414"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(go): Add pointer field test for meta share mode by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2674",children:"https://github.com/apache/fory/pull/2674"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): make Serializer api to return Result && replace panic/expect/assert/unwrap with Result by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2765",children:"https://github.com/apache/fory/pull/2765"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): refactor rust serialization system by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2774",children:"https://github.com/apache/fory/pull/2774"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): support optional typehint for dataclass fields by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2766",children:"https://github.com/apache/fory/pull/2766"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): dynamic rust serializer system by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2778",children:"https://github.com/apache/fory/pull/2778"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): use rc instead of arc for type meta for faster performance by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2782",children:"https://github.com/apache/fory/pull/2782"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): support dataclass compatible mode for python native mode by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2784",children:"https://github.com/apache/fory/pull/2784"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(java): support deserialize non exist enum variant to default by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2787",children:"https://github.com/apache/fory/pull/2787"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(go): update codegen field sorting to generate smaller and faster code by @ThisingL in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2779",children:"https://github.com/apache/fory/pull/2779"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): make type meta resolve return type info directly by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2789",children:"https://github.com/apache/fory/pull/2789"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(Rust): remove clone()/to_owned() on MetaString/MetaStringBytes in MetaStringResolver to improve performance && fix xlang test by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2791",children:"https://github.com/apache/fory/pull/2791"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support static struct version hash check for rust by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2793",children:"https://github.com/apache/fory/pull/2793"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): support profile all data types in rust benchmark by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2801",children:"https://github.com/apache/fory/pull/2801"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(rust): optimize rust small string/struct read/write performance by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2803",children:"https://github.com/apache/fory/pull/2803"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(rust): optimize rust performance by remove copy simd and add more inline hints by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2807",children:"https://github.com/apache/fory/pull/2807"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(rust): always use utf8 when writing string by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2809",children:"https://github.com/apache/fory/pull/2809"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(python): add deserialization policy for more fine-grained control and audit deserialization behaviour by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2811",children:"https://github.com/apache/fory/pull/2811"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(Rust): Enchance performance by @theweipeng in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2810",children:"https://github.com/apache/fory/pull/2810"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(Rust): Support serialize_to by @theweipeng in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2822",children:"https://github.com/apache/fory/pull/2822"})]}),"\n",(0,i.jsxs)(h.li,{children:["feat(rust): lazy build typeinfo for rust to avoid nested struct register deps by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2824",children:"https://github.com/apache/fory/pull/2824"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(Rust): Refactor reader by @theweipeng in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2826",children:"https://github.com/apache/fory/pull/2826"})]}),"\n",(0,i.jsxs)(h.li,{children:["perf(python): optimize pyfory perf by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2829",children:"https://github.com/apache/fory/pull/2829"})]}),"\n"]}),"\n",(0,i.jsx)(h.h2,{id:"bug-fix",children:"Bug Fix"}),"\n",(0,i.jsxs)(h.ul,{children:["\n",(0,i.jsxs)(h.li,{children:["fix(java): fix map/list element type same with collection type jit error by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2465",children:"https://github.com/apache/fory/pull/2465"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix gh action pypi publish by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2468",children:"https://github.com/apache/fory/pull/2468"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix row encoder for private struct by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2469",children:"https://github.com/apache/fory/pull/2469"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix pyfory pypi release by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2473",children:"https://github.com/apache/fory/pull/2473"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix py release on macos 13 by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2478",children:"https://github.com/apache/fory/pull/2478"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): Build python wheels using interpreters in manylinux2014 by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2486",children:"https://github.com/apache/fory/pull/2486"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): Encoders.mapEncoder(TypeRef, TypeRef, TypeRef, Fory) should load bean classes by @stevenschlansker in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2494",children:"https://github.com/apache/fory/pull/2494"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): row format generated bean types handling Optional by @stevenschlansker in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2497",children:"https://github.com/apache/fory/pull/2497"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix: Fix the issue of addListener not releasing the lock by @open-snail in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2500",children:"https://github.com/apache/fory/pull/2500"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): Use $ROOT/dist for wheel distribution by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2506",children:"https://github.com/apache/fory/pull/2506"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix publich tag for workflow by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2517",children:"https://github.com/apache/fory/pull/2517"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): print workflow head branch by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2518",children:"https://github.com/apache/fory/pull/2518"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix release python wheel head_branch tag by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2519",children:"https://github.com/apache/fory/pull/2519"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): MemoryBuffer tests that equalTo works with size zero buffers by @stevenschlansker in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2524",children:"https://github.com/apache/fory/pull/2524"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): Pass tag to bump_py_version, set PLAT inside manylinux container by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2522",children:"https://github.com/apache/fory/pull/2522"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): Use ref_name tag in Windows, name release runs, verify wheel versions, use all python versions for release by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2532",children:"https://github.com/apache/fory/pull/2532"})]}),"\n",(0,i.jsxs)(h.li,{children:["ci: Fix verify_version() by capturing version properly by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2535",children:"https://github.com/apache/fory/pull/2535"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix bump_wheel version by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2534",children:"https://github.com/apache/fory/pull/2534"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix bump version by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2536",children:"https://github.com/apache/fory/pull/2536"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): add macos 13 release by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2538",children:"https://github.com/apache/fory/pull/2538"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): use lowercase for betahuhn/repo-file-sync-action by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2541",children:"https://github.com/apache/fory/pull/2541"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): use commit hash for repo-file-sync-action by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2542",children:"https://github.com/apache/fory/pull/2542"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): array encoder seems to waste 8 bytes in encode(T) by @stevenschlansker in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2551",children:"https://github.com/apache/fory/pull/2551"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): Install pyfory for golang xlang tests by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2561",children:"https://github.com/apache/fory/pull/2561"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): Exit with subprocess return code in run_ci.py by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2560",children:"https://github.com/apache/fory/pull/2560"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix codegen name conflict by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2565",children:"https://github.com/apache/fory/pull/2565"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix classinfo npe on graalvm by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2572",children:"https://github.com/apache/fory/pull/2572"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): Skip calculation of classVersionHash if checkClassVersion is false by @theigl in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2573",children:"https://github.com/apache/fory/pull/2573"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): skip hash compute for abstract field type by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2575",children:"https://github.com/apache/fory/pull/2575"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): row format buffer recycling leaves offset and size for null values by @stevenschlansker in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2540",children:"https://github.com/apache/fory/pull/2540"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix xlang register type by id by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2591",children:"https://github.com/apache/fory/pull/2591"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix xlang mode meta shared for java by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2592",children:"https://github.com/apache/fory/pull/2592"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): Fix the build dependency failure that occurred in pyfory by @pandalee99 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2596",children:"https://github.com/apache/fory/pull/2596"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): Delete the redundant code in typedef by @pandalee99 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2600",children:"https://github.com/apache/fory/pull/2600"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix register by id for xlang metashare mode in java by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2614",children:"https://github.com/apache/fory/pull/2614"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java/python): fix meta string encoding order by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2616",children:"https://github.com/apache/fory/pull/2616"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(go): Complete type registration in factory-based serializer system by @ThisingL in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2619",children:"https://github.com/apache/fory/pull/2619"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix pyfory depth limit by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2626",children:"https://github.com/apache/fory/pull/2626"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix get nested genericType for codegen by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2632",children:"https://github.com/apache/fory/pull/2632"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): register dynamic serializer only not require registration by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2634",children:"https://github.com/apache/fory/pull/2634"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix record serialization on graalvm25 by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2644",children:"https://github.com/apache/fory/pull/2644"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix field converter for xlang by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2654",children:"https://github.com/apache/fory/pull/2654"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix array serialization on graalvm by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2664",children:"https://github.com/apache/fory/pull/2664"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix meta share deserialization for register by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2667",children:"https://github.com/apache/fory/pull/2667"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): retain serializers in graalvm native images by @gudzpoz in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2680",children:"https://github.com/apache/fory/pull/2680"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix graalvm not use generated serializer by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2682",children:"https://github.com/apache/fory/pull/2682"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix register serializer for xlang in java by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2683",children:"https://github.com/apache/fory/pull/2683"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix InputStream read big buffer error by @wuwangben in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2687",children:"https://github.com/apache/fory/pull/2687"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(python): fix python module/type serialize by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2688",children:"https://github.com/apache/fory/pull/2688"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): Fix flakiness in CollectionSerializersTest#tesPriorityQueueSerializer by @swj20010308 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2693",children:"https://github.com/apache/fory/pull/2693"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): Fix flakiness in LazyMapTest#testMap by @swj20010308 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2692",children:"https://github.com/apache/fory/pull/2692"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix deserializing EXT type bug by @mengnankkkk in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2700",children:"https://github.com/apache/fory/pull/2700"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix xlang typedef encode by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2719",children:"https://github.com/apache/fory/pull/2719"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): Fix flakiness in MetaContextTest#testShareClassName and #testShareClassDefCompatible by @swj20010308 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2739",children:"https://github.com/apache/fory/pull/2739"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): Fix flakiness in ForyCopyTest#mutableObjectCopyTest by @swj20010308 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2738",children:"https://github.com/apache/fory/pull/2738"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): add retry logic to Bazel downloads to prevent flaky CI failures by @SanyamSuyal in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2733",children:"https://github.com/apache/fory/pull/2733"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): serialize collections with only null elements in xlang mode by @mymde in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2740",children:"https://github.com/apache/fory/pull/2740"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): fix sync file by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2750",children:"https://github.com/apache/fory/pull/2750"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(ci): fix sync files by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2752",children:"https://github.com/apache/fory/pull/2752"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(docs): fix rust doc links build and check by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2753",children:"https://github.com/apache/fory/pull/2753"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix maven cache by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2755",children:"https://github.com/apache/fory/pull/2755"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(rust): fix rust xlang tests by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2788",children:"https://github.com/apache/fory/pull/2788"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): Fix flakiness in CollectionSerializersTest#testCollectionFieldSerializers, CollectionSerializersTest#testCollectionFieldSerializersCopy and ProtocolInteroperabilityTest#testComplexCollection by @swj20010308 in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2790",children:"https://github.com/apache/fory/pull/2790"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(java): fix java shanpshot version by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2800",children:"https://github.com/apache/fory/pull/2800"})]}),"\n",(0,i.jsxs)(h.li,{children:["fix(go): Adjust serialization of nullable value to align python behavior by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2814",children:"https://github.com/apache/fory/pull/2814"})]}),"\n"]}),"\n",(0,i.jsx)(h.h2,{id:"other-improvements",children:"Other Improvements"}),"\n",(0,i.jsxs)(h.ul,{children:["\n",(0,i.jsxs)(h.li,{children:["chore(python): disable pyfory.format import warning by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2476",children:"https://github.com/apache/fory/pull/2476"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: bump release version to 0.12.0 by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2489",children:"https://github.com/apache/fory/pull/2489"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs: fix meta_size_mask by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2495",children:"https://github.com/apache/fory/pull/2495"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: fix typos by @Asnowww in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2496",children:"https://github.com/apache/fory/pull/2496"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs: Improve pyfory PyPI documentation by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2498",children:"https://github.com/apache/fory/pull/2498"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(python): add row format doc by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2499",children:"https://github.com/apache/fory/pull/2499"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: translate Chinese comments into English by @Asnowww in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2503",children:"https://github.com/apache/fory/pull/2503"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs: Improve pull request template by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2508",children:"https://github.com/apache/fory/pull/2508"})]}),"\n",(0,i.jsxs)(h.li,{children:["ci: Fix Windows wheel creation by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2511",children:"https://github.com/apache/fory/pull/2511"})]}),"\n",(0,i.jsxs)(h.li,{children:["ci: Pass the GH token to actions/download-artifact by @esafak in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2514",children:"https://github.com/apache/fory/pull/2514"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: fix MetaStrEncoding by @co63oc in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2516",children:"https://github.com/apache/fory/pull/2516"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(javascript): rename foryjs to apache-fory and remove install docs by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2544",children:"https://github.com/apache/fory/pull/2544"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: bump release version to 0.12.1 by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2556",children:"https://github.com/apache/fory/pull/2556"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs: update contributing.md with Rust lint command by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2569",children:"https://github.com/apache/fory/pull/2569"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(ci): use str replace to make bump java version faster by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2568",children:"https://github.com/apache/fory/pull/2568"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(java): add idea jdk11 usage config by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2570",children:"https://github.com/apache/fory/pull/2570"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): add rust document by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2582",children:"https://github.com/apache/fory/pull/2582"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: bump release version to 0.12.2 by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2589",children:"https://github.com/apache/fory/pull/2589"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: add trademark for fory name by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2590",children:"https://github.com/apache/fory/pull/2590"})]}),"\n",(0,i.jsxs)(h.li,{children:['chore: Revert "fix(python): Fix the build dependency failure that occurred in pyfory" by @chaokunyang in ',(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2597",children:"https://github.com/apache/fory/pull/2597"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: remove slash in homepage URL by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2604",children:"https://github.com/apache/fory/pull/2604"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(go): replace all typ to type_ by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2612",children:"https://github.com/apache/fory/pull/2612"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: bump release version to 0.12.3 by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2645",children:"https://github.com/apache/fory/pull/2645"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs: add AGENT.md to make AI coding more efficient by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2646",children:"https://github.com/apache/fory/pull/2646"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(rust): remove tag read/write by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2681",children:"https://github.com/apache/fory/pull/2681"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(python): refine python readme with detailed docs by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2689",children:"https://github.com/apache/fory/pull/2689"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(python): update schema evolution support in README by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2690",children:"https://github.com/apache/fory/pull/2690"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs: fix python readme lint by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2694",children:"https://github.com/apache/fory/pull/2694"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): add comprehensive rust readme document by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2723",children:"https://github.com/apache/fory/pull/2723"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): add detailed rust api doc and readme by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2728",children:"https://github.com/apache/fory/pull/2728"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs: sync rust and python document to fory-site by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2734",children:"https://github.com/apache/fory/pull/2734"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): update rust roadmap by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2754",children:"https://github.com/apache/fory/pull/2754"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): fix rust doc broken link by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2756",children:"https://github.com/apache/fory/pull/2756"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): fix rust doc lint by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2757",children:"https://github.com/apache/fory/pull/2757"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(go): Update README.md by @junjiexh in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2675",children:"https://github.com/apache/fory/pull/2675"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): add rust thread safety and troubleshooting doc by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2781",children:"https://github.com/apache/fory/pull/2781"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(rust): rename fory-tests to tests by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2783",children:"https://github.com/apache/fory/pull/2783"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): update rust serializer trait doc by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2795",children:"https://github.com/apache/fory/pull/2795"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore: fix release error by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2796",children:"https://github.com/apache/fory/pull/2796"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(python): rename numeric typehint by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2808",children:"https://github.com/apache/fory/pull/2808"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(rust): reorder fory rust methods by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2813",children:"https://github.com/apache/fory/pull/2813"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(python): refine python code and add api doc by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2816",children:"https://github.com/apache/fory/pull/2816"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(ci): remove macos13 ci for rust/c++ by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2817",children:"https://github.com/apache/fory/pull/2817"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(rust): rename metastring to meta_string by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2812",children:"https://github.com/apache/fory/pull/2812"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): add serialize_to api doc by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2825",children:"https://github.com/apache/fory/pull/2825"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(Rust): Streamline code by @theweipeng in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2828",children:"https://github.com/apache/fory/pull/2828"})]}),"\n",(0,i.jsxs)(h.li,{children:["docs(rust): update serialize to deserialize from doc by @chaokunyang in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2830",children:"https://github.com/apache/fory/pull/2830"})]}),"\n",(0,i.jsxs)(h.li,{children:["chore(Rust): Remove new_from_fory from context.rs by @urlyy in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2831",children:"https://github.com/apache/fory/pull/2831"})]}),"\n"]}),"\n",(0,i.jsx)(h.h2,{id:"new-contributors",children:"New Contributors"}),"\n",(0,i.jsxs)(h.ul,{children:["\n",(0,i.jsxs)(h.li,{children:["@adriacabeza made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2467",children:"https://github.com/apache/fory/pull/2467"})]}),"\n",(0,i.jsxs)(h.li,{children:["@Asnowww made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2496",children:"https://github.com/apache/fory/pull/2496"})]}),"\n",(0,i.jsxs)(h.li,{children:["@open-snail made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2500",children:"https://github.com/apache/fory/pull/2500"})]}),"\n",(0,i.jsxs)(h.li,{children:["@junjiexh made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2554",children:"https://github.com/apache/fory/pull/2554"})]}),"\n",(0,i.jsxs)(h.li,{children:["@ThisingL made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2553",children:"https://github.com/apache/fory/pull/2553"})]}),"\n",(0,i.jsxs)(h.li,{children:["@gudzpoz made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2680",children:"https://github.com/apache/fory/pull/2680"})]}),"\n",(0,i.jsxs)(h.li,{children:["@wuwangben made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2687",children:"https://github.com/apache/fory/pull/2687"})]}),"\n",(0,i.jsxs)(h.li,{children:["@swj20010308 made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2693",children:"https://github.com/apache/fory/pull/2693"})]}),"\n",(0,i.jsxs)(h.li,{children:["@mengnankkkk made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2700",children:"https://github.com/apache/fory/pull/2700"})]}),"\n",(0,i.jsxs)(h.li,{children:["@SanyamSuyal made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2733",children:"https://github.com/apache/fory/pull/2733"})]}),"\n",(0,i.jsxs)(h.li,{children:["@mymde made their first contribution in ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/pull/2740",children:"https://github.com/apache/fory/pull/2740"})]}),"\n"]}),"\n",(0,i.jsxs)(h.p,{children:[(0,i.jsx)(h.strong,{children:"Full Changelog"}),": ",(0,i.jsx)(h.a,{href:"https://github.com/apache/fory/compare/v0.12.3...v0.13.0-rc2",children:"https://github.com/apache/fory/compare/v0.12.3...v0.13.0-rc2"})]})]})}function p(e={}){const{wrapper:h}={...(0,a.a)(),...e.components};return h?(0,i.jsx)(h,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},11151:(e,h,t)=>{t.d(h,{Z:()=>s,a:()=>l});var i=t(67294);const a={},r=i.createContext(a);function l(e){const h=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(h):{...h,...e}}),[h,e])}function s(e){let h;return h=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(r.Provider,{value:h},e.children)}}}]);