"use strict";(self.webpackChunkfory_site=self.webpackChunkfory_site||[]).push([[2852],{74968:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var r=n(85893),s=n(11151);const t={id:"introduction",title:"Introduction",sidebar_position:1},o=void 0,a={id:"docs/introduction/introduction",title:"Introduction",description:"Apache Fory\u2122 is a blazingly-fast multi-language serialization framework powered by JIT compilation, zero-copy techniques, and advanced code generation, achieving up to 170x performance improvement while maintaining simplicity and ease of use.",source:"@site/docs/docs/introduction/introduction.md",sourceDirName:"docs/introduction",slug:"/docs/introduction/",permalink:"/docs/next/docs/introduction/",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/fory-site/tree/main/docs/docs/introduction/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"introduction",title:"Introduction",sidebar_position:1},sidebar:"docsSidebar",next:{title:"Features",permalink:"/docs/next/docs/introduction/features"}},c={},l=[{value:"Key Features",id:"key-features",level:2},{value:"\ud83d\ude80 High-Performance Serialization",id:"-high-performance-serialization",level:3},{value:"\ud83c\udf0d Cross-Language Serialization",id:"-cross-language-serialization",level:3},{value:"\ud83d\udcca Row Format",id:"-row-format",level:3},{value:"\ud83d\udd12 Security &amp; Production-Readiness",id:"-security--production-readiness",level:3},{value:"Protocols",id:"protocols",level:2},{value:"Documentation",id:"documentation",level:2},{value:"User Guides",id:"user-guides",level:3},{value:"Protocol Specifications",id:"protocol-specifications",level:3},{value:"Compatibility",id:"compatibility",level:2},{value:"Schema Compatibility",id:"schema-compatibility",level:3},{value:"Binary Compatibility",id:"binary-compatibility",level:3},{value:"Security",id:"security",level:2},{value:"Overview",id:"overview",level:3},{value:"Community and Support",id:"community-and-support",level:2},{value:"Getting Help",id:"getting-help",level:3},{value:"Contributing",id:"contributing",level:3}];function d(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("img",{width:"65%",alt:"Apache Fory logo",src:"/img/navbar-logo.png"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Apache Fory\u2122"})," is a blazingly-fast multi-language serialization framework powered by ",(0,r.jsx)(i.strong,{children:"JIT compilation"}),", ",(0,r.jsx)(i.strong,{children:"zero-copy"})," techniques, and ",(0,r.jsx)(i.strong,{children:"advanced code generation"}),", achieving up to ",(0,r.jsx)(i.strong,{children:"170x performance improvement"})," while maintaining simplicity and ease of use."]}),"\n",(0,r.jsx)(i.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsx)(i.h3,{id:"-high-performance-serialization",children:"\ud83d\ude80 High-Performance Serialization"}),"\n",(0,r.jsx)(i.p,{children:"Apache Fory\u2122 delivers exceptional performance through advanced optimization techniques:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"JIT Compilation"}),": Runtime code generation for Java eliminates virtual method calls and inlines hot paths"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Static Code Generation"}),": Compile-time code generation for Rust, C++, and Go delivers peak performance without runtime overhead"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Zero-Copy Operations"}),": Direct memory access without intermediate buffer copies; row format enables random access and partial serialization"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Intelligent Encoding"}),": Variable-length compression for integers and strings; SIMD acceleration for arrays (Java 16+)"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Meta Sharing"}),": Class metadata packing reduces redundant type information across serializations"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"-cross-language-serialization",children:"\ud83c\udf0d Cross-Language Serialization"}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/fory_xlang_serialization_spec",children:"xlang serialization format"})})," enables seamless data exchange across programming languages:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Automatic Type Mapping"}),": Intelligent conversion between language-specific types (",(0,r.jsx)(i.a,{href:"/docs/next/specification/xlang_type_mapping",children:"type mapping"}),")"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Reference Preservation"}),": Shared and circular references work correctly across languages"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Polymorphism"}),": Objects serialize/deserialize with their actual runtime types"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Schema Evolution"}),": Optional forward/backward compatibility for evolving schemas"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Automatic Serialization"}),": No IDL or schema definitions required; serialize any object directly without code generation"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"-row-format",children:"\ud83d\udcca Row Format"}),"\n",(0,r.jsxs)(i.p,{children:["A cache-friendly ",(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/fory_row_format_spec",children:"row format"})})," optimized for analytics workloads:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Zero-Copy Random Access"}),": Read individual fields without deserializing entire objects"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Partial Operations"}),": Selective field serialization and deserialization for efficiency"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Apache Arrow Integration"}),": Seamless conversion to columnar format for analytics pipelines"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Multi-Language"}),": Available in Java, Python, Rust and C++"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"-security--production-readiness",children:"\ud83d\udd12 Security & Production-Readiness"}),"\n",(0,r.jsx)(i.p,{children:"Enterprise-grade security and compatibility:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Class Registration"}),": Whitelist-based deserialization control (enabled by default)"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Depth Limiting"}),": Protection against recursive object graph attacks"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Configurable Policies"}),": Custom class checkers and deserialization policies"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Platform Support"}),": Java 8-24, GraalVM native image, multiple OS platforms"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"protocols",children:"Protocols"}),"\n",(0,r.jsx)(i.p,{children:"Apache Fory\u2122 implements multiple binary protocols optimized for different scenarios:"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Protocol"}),(0,r.jsx)(i.th,{children:"Use Case"}),(0,r.jsx)(i.th,{children:"Key Features"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/fory_xlang_serialization_spec",children:"Xlang Serialization"})})}),(0,r.jsx)(i.td,{children:"Cross-language object exchange"}),(0,r.jsx)(i.td,{children:"Automatic serialization, references, polymorphism"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/fory_java_serialization_spec",children:"Java Serialization"})})}),(0,r.jsx)(i.td,{children:"High-performance Java-only"}),(0,r.jsx)(i.td,{children:"Drop-in JDK serialization replacement, 100x faster"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/fory_row_format_spec",children:"Row Format"})})}),(0,r.jsx)(i.td,{children:"Analytics and data processing"}),(0,r.jsx)(i.td,{children:"Zero-copy random access, Arrow compatibility"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Python Native"})}),(0,r.jsx)(i.td,{children:"Python-specific serialization"}),(0,r.jsx)(i.td,{children:"Pickle/cloudpickle replacement with better performance"})]})]})]}),"\n",(0,r.jsx)(i.p,{children:"All protocols share the same optimized codebase, allowing improvements in one protocol to benefit others."}),"\n",(0,r.jsx)(i.h2,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsx)(i.h3,{id:"user-guides",children:"User Guides"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Guide"}),(0,r.jsx)(i.th,{children:"Description"}),(0,r.jsx)(i.th,{children:"Source"}),(0,r.jsx)(i.th,{children:"Website"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Java Serialization"})}),(0,r.jsx)(i.td,{children:"Comprehensive guide for Java serialization"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/java_serialization",children:"java_serialization_guide.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/docs/guide/java_serialization",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Cross-Language Serialization"})}),(0,r.jsx)(i.td,{children:"Multi-language object exchange"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/xlang_serialization",children:"xlang_serialization_guide.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/specification/fory_xlang_serialization_spec",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Row Format"})}),(0,r.jsx)(i.td,{children:"Zero-copy random access format"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/row_format",children:"row_format_guide.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/specification/fory_row_format_spec",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Python"})}),(0,r.jsx)(i.td,{children:"Python-specific features and usage"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/python_serialization",children:"python_guide.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/docs/guide/python_serialization",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Rust"})}),(0,r.jsx)(i.td,{children:"Rust implementation and patterns"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/rust_serialization",children:"rust_guide.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/docs/guide/rust_serialization",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Scala"})}),(0,r.jsx)(i.td,{children:"Scala integration and best practices"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/scala_serialization",children:"scala_guide.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/docs/guide/scala_serialization",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"GraalVM"})}),(0,r.jsx)(i.td,{children:"Native image support and AOT compilation"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/graalvm_serialization",children:"graalvm_guide.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/docs/guide/graalvm_serialization",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Development"})}),(0,r.jsx)(i.td,{children:"Building and contributing to Fory"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/development",children:"DEVELOPMENT.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/docs/guide/development",children:"\ud83d\udcd6 View"})})]})]})]}),"\n",(0,r.jsx)(i.h3,{id:"protocol-specifications",children:"Protocol Specifications"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Specification"}),(0,r.jsx)(i.th,{children:"Description"}),(0,r.jsx)(i.th,{children:"Source"}),(0,r.jsx)(i.th,{children:"Website"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Xlang Serialization"})}),(0,r.jsx)(i.td,{children:"Cross-language binary protocol"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/fory_xlang_serialization_spec",children:"xlang_serialization_spec.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/specification/fory_xlang_serialization_spec",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Java Serialization"})}),(0,r.jsx)(i.td,{children:"Java-optimized protocol"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/fory_java_serialization_spec",children:"java_serialization_spec.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/specification/fory_java_serialization_spec",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Row Format"})}),(0,r.jsx)(i.td,{children:"Row-based binary format"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/fory_row_format_spec",children:"row_format_spec.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/specification/fory_row_format_spec",children:"\ud83d\udcd6 View"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.strong,{children:"Type Mapping"})}),(0,r.jsx)(i.td,{children:"Cross-language type conversion"}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"/docs/next/specification/xlang_type_mapping",children:"xlang_type_mapping.md"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"https://fory.apache.org/docs/specification/fory_xlang_serialization_spec",children:"\ud83d\udcd6 View"})})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"compatibility",children:"Compatibility"}),"\n",(0,r.jsx)(i.h3,{id:"schema-compatibility",children:"Schema Compatibility"}),"\n",(0,r.jsxs)(i.p,{children:["Apache Fory\u2122 supports class schema forward/backward compatibility across ",(0,r.jsx)(i.strong,{children:"Java, Python, Rust, and Golang"}),", enabling seamless schema evolution in production systems without requiring coordinated upgrades across all services. Fory provides two schema compatibility modes:"]}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Schema Consistent Mode (Default)"}),": Assumes identical class schemas between serialization and deserialization peers. This mode offers minimal serialization overhead, smallest data size, and fastest performance: ideal for stable schemas or controlled environments."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Compatible Mode"}),": Supports independent schema evolution with forward and backward compatibility. This mode enables field addition/deletion, limited type evolution, and graceful handling of schema mismatches. Enable using ",(0,r.jsx)(i.code,{children:"withCompatibleMode(CompatibleMode.COMPATIBLE)"})," in Java, ",(0,r.jsx)(i.code,{children:"compatible=True"})," in Python, ",(0,r.jsx)(i.code,{children:"compatible_mode(true)"})," in Rust, or ",(0,r.jsx)(i.code,{children:"NewFory(true)"})," in Go."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"binary-compatibility",children:"Binary Compatibility"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Current Status"}),": Binary compatibility is ",(0,r.jsx)(i.strong,{children:"not guaranteed"})," between Fory major releases as the protocol continues to evolve. However, compatibility ",(0,r.jsx)(i.strong,{children:"is guaranteed"})," between minor versions (e.g., 0.13.x)."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Recommendations"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Version your serialized data by Fory major version"}),"\n",(0,r.jsx)(i.li,{children:"Plan migration strategies when upgrading major versions"}),"\n",(0,r.jsxs)(i.li,{children:["See ",(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/java_serialization#upgrade-fory",children:"upgrade guide"})," for details"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Future"}),": Binary compatibility will be guaranteed starting from Fory 1.0 release."]}),"\n",(0,r.jsx)(i.h2,{id:"security",children:"Security"}),"\n",(0,r.jsx)(i.h3,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(i.p,{children:"Serialization security varies by protocol:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Row Format"}),": Secure with predefined schemas"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Object Graph Serialization"})," (Java/Python native): More flexible but requires careful security configuration"]}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["Dynamic serialization can deserialize arbitrary types, which may introduces risks. For example, the deserialization may invoke ",(0,r.jsx)(i.code,{children:"init"})," constructor or ",(0,r.jsx)(i.code,{children:"equals/hashCode"})," method, if the method body contains malicious code, the system will be at risk."]}),"\n",(0,r.jsxs)(i.p,{children:["Fory enables class registration ",(0,r.jsx)(i.strong,{children:"by default"})," for dynamic protocols, allowing only trusted registered types.\n",(0,r.jsx)(i.strong,{children:"Do not disable class registration unless you can ensure your environment is secure"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:["If this option is disabled, you are responsible for serialization security. You should implement and configure a customized ",(0,r.jsx)(i.code,{children:"ClassChecker"})," or ",(0,r.jsx)(i.code,{children:"DeserializationPolicy"})," for fine-grained security control"]}),"\n",(0,r.jsxs)(i.p,{children:["To report security vulnerabilities in Apache Fory\u2122, please follow the ",(0,r.jsx)(i.a,{href:"https://apache.org/security/#reporting-a-vulnerability",children:"ASF vulnerability reporting process"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"community-and-support",children:"Community and Support"}),"\n",(0,r.jsx)(i.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Slack"}),": Join our ",(0,r.jsx)(i.a,{href:"https://join.slack.com/t/fory-project/shared_invite/zt-36g0qouzm-kcQSvV_dtfbtBKHRwT5gsw",children:"Slack workspace"})," for community discussions"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Twitter/X"}),": Follow ",(0,r.jsx)(i.a,{href:"https://x.com/ApacheFory",children:"@ApacheFory"})," for updates and announcements"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"GitHub Issues"}),": Report bugs and request features at ",(0,r.jsx)(i.a,{href:"https://github.com/apache/fory/issues",children:"apache/fory"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Mailing Lists"}),": Subscribe to Apache Fory mailing lists for development discussions"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"contributing",children:"Contributing"}),"\n",(0,r.jsxs)(i.p,{children:["We welcome contributions! Please read our ",(0,r.jsx)(i.a,{href:"https://github.com/apache/fory/blob/main/CONTRIBUTING.md",children:"Contributing Guide"})," to get started."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Ways to Contribute"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"\ud83d\udc1b Report bugs and issues"}),"\n",(0,r.jsx)(i.li,{children:"\ud83d\udca1 Propose new features"}),"\n",(0,r.jsx)(i.li,{children:"\ud83d\udcdd Improve documentation"}),"\n",(0,r.jsx)(i.li,{children:"\ud83d\udd27 Submit pull requests"}),"\n",(0,r.jsx)(i.li,{children:"\ud83e\uddea Add test cases"}),"\n",(0,r.jsx)(i.li,{children:"\ud83d\udcca Share benchmarks"}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["See ",(0,r.jsx)(i.a,{href:"/docs/next/docs/guide/development",children:"Development Guide"})," for build instructions and development workflow."]})]})}function h(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11151:(e,i,n)=>{n.d(i,{Z:()=>a,a:()=>o});var r=n(67294);const s={},t=r.createContext(s);function o(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);